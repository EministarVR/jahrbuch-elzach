<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/app/admin/actions.ts">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/admin/actions.ts" />
              <option name="originalContent" value="'use server';&#10;&#10;import { redirect } from 'next/navigation';&#10;import { getSession } from '@/lib/session';&#10;import { createUser, deleteUser } from '@/lib/auth';&#10;import { revalidatePath } from 'next/cache';&#10;import { getDbPool } from '@/lib/db';&#10;&#10;export async function createUserAction(formData: FormData) {&#10;  const session = await getSession();&#10;  if (!session || session.role !== 'admin') redirect('/login');&#10;  &#10;  const username = String(formData.get('username') || '').trim();&#10;  const password = String(formData.get('password') || '').trim();&#10;  &#10;  if (!username || !password) {&#10;    throw new Error('Username and password are required');&#10;  }&#10;  &#10;  try {&#10;    await createUser(username, password, 'user');&#10;    revalidatePath('/admin');&#10;  } catch (error) {&#10;    console.error('Error creating user:', error);&#10;    throw error;&#10;  }&#10;}&#10;&#10;export async function deleteUserAction(formData: FormData) {&#10;  const session = await getSession();&#10;  if (!session || session.role !== 'admin') redirect('/login');&#10;  &#10;  const id = Number(formData.get('id'));&#10;  if (!id) {&#10;    throw new Error('User ID is required');&#10;  }&#10;  &#10;  try {&#10;    await deleteUser(id);&#10;    revalidatePath('/admin');&#10;  } catch (error) {&#10;    console.error('Error deleting user:', error);&#10;    throw error;&#10;  }&#10;}&#10;&#10;export async function approveSubmissionAction(formData: FormData) {&#10;  const session = await getSession();&#10;  if (!session || session.role !== 'admin') redirect('/login');&#10;&#10;  const id = Number(formData.get('id'));&#10;  if (!id) {&#10;    throw new Error('Submission ID is required');&#10;  }&#10;&#10;  const conn = await getDbPool().getConnection();&#10;  try {&#10;    await conn.beginTransaction();&#10;    await conn.execute(&#10;      &quot;UPDATE submissions SET status='approved', approved_by=?, approved_at=NOW(), deleted_by=NULL, deleted_at=NULL WHERE id=?&quot;,&#10;      [session.userId, id]&#10;    );&#10;    await conn.execute(&#10;      &quot;INSERT INTO submission_audit (submission_id, action, actor_user_id) VALUES (?, 'approve', ?)&quot;,&#10;      [id, session.userId]&#10;    );&#10;    await conn.commit();&#10;  } catch (e) {&#10;    await conn.rollback();&#10;    throw e;&#10;  } finally {&#10;    conn.release();&#10;  }&#10;  revalidatePath('/admin');&#10;}&#10;&#10;export async function deleteSubmissionAction(formData: FormData) {&#10;  const session = await getSession();&#10;  if (!session || session.role !== 'admin') redirect('/login');&#10;  const id = Number(formData.get('id'));&#10;  if (!id) throw new Error('Submission ID is required');&#10;  const conn = await getDbPool().getConnection();&#10;  try {&#10;    await conn.beginTransaction();&#10;    await conn.execute(&#10;      &quot;UPDATE submissions SET status='deleted', deleted_by=?, deleted_at=NOW() WHERE id=?&quot;,&#10;      [session.userId, id]&#10;    );&#10;    await conn.execute(&#10;      &quot;INSERT INTO submission_audit (submission_id, action, actor_user_id) VALUES (?, 'delete', ?)&quot;,&#10;      [id, session.userId]&#10;    );&#10;    await conn.commit();&#10;  } catch (e) {&#10;    await conn.rollback();&#10;    throw e;&#10;  } finally {&#10;    conn.release();&#10;  }&#10;  revalidatePath('/admin');&#10;}&#10;&#10;export async function restoreSubmissionAction(formData: FormData) {&#10;  const session = await getSession();&#10;  if (!session || session.role !== 'admin') redirect('/login');&#10;  const id = Number(formData.get('id'));&#10;  if (!id) throw new Error('Submission ID is required');&#10;  const conn = await getDbPool().getConnection();&#10;  try {&#10;    await conn.beginTransaction();&#10;    await conn.execute(&#10;      &quot;UPDATE submissions SET status='pending', approved_by=NULL, approved_at=NULL, deleted_by=NULL, deleted_at=NULL WHERE id=?&quot;,&#10;      [id]&#10;    );&#10;    await conn.execute(&#10;      &quot;INSERT INTO submission_audit (submission_id, action, actor_user_id) VALUES (?, 'restore', ?)&quot;,&#10;      [id, session.userId]&#10;    );&#10;    await conn.commit();&#10;  } catch (e) {&#10;    await conn.rollback();&#10;    throw e;&#10;  } finally {&#10;    conn.release();&#10;  }&#10;  revalidatePath('/admin');&#10;}&#10;" />
              <option name="updatedContent" value="'use server';&#10;&#10;import { redirect } from 'next/navigation';&#10;import { getSession } from '@/lib/session';&#10;import { createUser, deleteUser } from '@/lib/auth';&#10;import { revalidatePath } from 'next/cache';&#10;import { getDbPool } from '@/lib/db';&#10;import { ensureModerationSchema } from '@/lib/migrations';&#10;&#10;export async function createUserAction(formData: FormData) {&#10;  const session = await getSession();&#10;  if (!session || session.role !== 'admin') redirect('/login');&#10;  &#10;  const username = String(formData.get('username') || '').trim();&#10;  const password = String(formData.get('password') || '').trim();&#10;  &#10;  if (!username || !password) {&#10;    throw new Error('Username and password are required');&#10;  }&#10;  &#10;  try {&#10;    await createUser(username, password, 'user');&#10;    revalidatePath('/admin');&#10;  } catch (error) {&#10;    console.error('Error creating user:', error);&#10;    throw error;&#10;  }&#10;}&#10;&#10;export async function deleteUserAction(formData: FormData) {&#10;  const session = await getSession();&#10;  if (!session || session.role !== 'admin') redirect('/login');&#10;  &#10;  const id = Number(formData.get('id'));&#10;  if (!id) {&#10;    throw new Error('User ID is required');&#10;  }&#10;  &#10;  try {&#10;    await deleteUser(id);&#10;    revalidatePath('/admin');&#10;  } catch (error) {&#10;    console.error('Error deleting user:', error);&#10;    throw error;&#10;  }&#10;}&#10;&#10;export async function approveSubmissionAction(formData: FormData) {&#10;  const session = await getSession();&#10;  if (!session || session.role !== 'admin') redirect('/login');&#10;  await ensureModerationSchema();&#10;  const id = Number(formData.get('id'));&#10;  if (!id) throw new Error('Submission ID is required');&#10;  const conn = await getDbPool().getConnection();&#10;  try {&#10;    await conn.beginTransaction();&#10;    await conn.execute(&#10;      &quot;UPDATE submissions SET status='approved', approved_by=?, approved_at=NOW(), deleted_by=NULL, deleted_at=NULL WHERE id=?&quot;,&#10;      [session.userId, id]&#10;    );&#10;    await conn.execute(&#10;      &quot;INSERT INTO submission_audit (submission_id, action, actor_user_id) VALUES (?, 'approve', ?)&quot;,&#10;      [id, session.userId]&#10;    );&#10;    await conn.commit();&#10;  } catch (e) {&#10;    await conn.rollback();&#10;    throw e;&#10;  } finally {&#10;    conn.release();&#10;  }&#10;  revalidatePath('/admin');&#10;}&#10;&#10;export async function deleteSubmissionAction(formData: FormData) {&#10;  const session = await getSession();&#10;  if (!session || session.role !== 'admin') redirect('/login');&#10;  await ensureModerationSchema();&#10;  const id = Number(formData.get('id'));&#10;  if (!id) throw new Error('Submission ID is required');&#10;  const conn = await getDbPool().getConnection();&#10;  try {&#10;    await conn.beginTransaction();&#10;    await conn.execute(&#10;      &quot;UPDATE submissions SET status='deleted', deleted_by=?, deleted_at=NOW() WHERE id=?&quot;,&#10;      [session.userId, id]&#10;    );&#10;    await conn.execute(&#10;      &quot;INSERT INTO submission_audit (submission_id, action, actor_user_id) VALUES (?, 'delete', ?)&quot;,&#10;      [id, session.userId]&#10;    );&#10;    await conn.commit();&#10;  } catch (e) {&#10;    await conn.rollback();&#10;    throw e;&#10;  } finally {&#10;    conn.release();&#10;  }&#10;  revalidatePath('/admin');&#10;}&#10;&#10;export async function restoreSubmissionAction(formData: FormData) {&#10;  const session = await getSession();&#10;  if (!session || session.role !== 'admin') redirect('/login');&#10;  await ensureModerationSchema();&#10;  const id = Number(formData.get('id'));&#10;  if (!id) throw new Error('Submission ID is required');&#10;  const conn = await getDbPool().getConnection();&#10;  try {&#10;    await conn.beginTransaction();&#10;    await conn.execute(&#10;      &quot;UPDATE submissions SET status='pending', approved_by=NULL, approved_at=NULL, deleted_by=NULL, deleted_at=NULL WHERE id=?&quot;,&#10;      [id]&#10;    );&#10;    await conn.execute(&#10;      &quot;INSERT INTO submission_audit (submission_id, action, actor_user_id) VALUES (?, 'restore', ?)&quot;,&#10;      [id, session.userId]&#10;    );&#10;    await conn.commit();&#10;  } catch (e) {&#10;    await conn.rollback();&#10;    throw e;&#10;  } finally {&#10;    conn.release();&#10;  }&#10;  revalidatePath('/admin');&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/admin/page.tsx">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/admin/page.tsx" />
              <option name="originalContent" value="import { redirect } from &quot;next/navigation&quot;;&#10;import { getSession } from &quot;@/lib/session&quot;;&#10;import { query } from &quot;@/lib/db&quot;;&#10;import FancyHeading from &quot;@/components/ui/FancyHeading&quot;;&#10;import GlassCard from &quot;@/components/ui/GlassCard&quot;;&#10;import GlowButton from &quot;@/components/ui/GlowButton&quot;;&#10;import TiltCard from &quot;@/components/ui/TiltCard&quot;;&#10;import {&#10;  approveSubmissionAction,&#10;  deleteSubmissionAction,&#10;  restoreSubmissionAction,&#10;  createUserAction,&#10;  deleteUserAction,&#10;} from &quot;./actions&quot;;&#10;import {&#10;  CheckCircle2,&#10;  XCircle,&#10;  RotateCcw,&#10;  User2,&#10;  FileText,&#10;  Users,&#10;  Trash2,&#10;  Clock,&#10;} from &quot;lucide-react&quot;;&#10;&#10;export const dynamic = &quot;force-dynamic&quot;;&#10;&#10;type SubmissionRow = {&#10;  id: number;&#10;  user_id: number;&#10;  text: string;&#10;  name: string | null;&#10;  phone: string | null;&#10;  created_at: string;&#10;  status: &quot;pending&quot; | &quot;approved&quot; | &quot;deleted&quot;;&#10;  approved_by: number | null;&#10;  approved_at: string | null;&#10;  deleted_by: number | null;&#10;  deleted_at: string | null;&#10;  author: string;&#10;  approver: string | null;&#10;  deleter: string | null;&#10;};&#10;&#10;type AuditRow = {&#10;  id: number;&#10;  submission_id: number;&#10;  action: &quot;create&quot; | &quot;approve&quot; | &quot;delete&quot; | &quot;restore&quot;;&#10;  actor_user_id: number;&#10;  created_at: string;&#10;  actor: string;&#10;  preview: string;&#10;};&#10;&#10;type UserRow = { id: number; username: string; role: &quot;user&quot; | &quot;admin&quot; };&#10;&#10;export default async function AdminPage() {&#10;  const session = await getSession();&#10;  if (!session || session.role !== &quot;admin&quot;) redirect(&quot;/login&quot;);&#10;&#10;  const [stats] = (await query&lt;&#10;    { pending: number; approved: number; deleted: number; total: number }[]&#10;  &gt;(&#10;    &quot;SELECT SUM(status='pending') AS pending, SUM(status='approved') AS approved, SUM(status='deleted') AS deleted, COUNT(*) AS total FROM submissions&quot;&#10;  )) || [{ pending: 0, approved: 0, deleted: 0, total: 0 }];&#10;&#10;  const pending = await query&lt;SubmissionRow[]&gt;(&#10;    `SELECT s.*, au.username AS author,&#10;            ap.username AS approver, de.username AS deleter&#10;     FROM submissions s&#10;     JOIN users au ON au.id = s.user_id&#10;     LEFT JOIN users ap ON ap.id = s.approved_by&#10;     LEFT JOIN users de ON de.id = s.deleted_by&#10;     WHERE s.status = 'pending'&#10;     ORDER BY s.created_at DESC`&#10;  );&#10;&#10;  const approved = await query&lt;SubmissionRow[]&gt;(&#10;    `SELECT s.*, au.username AS author,&#10;            ap.username AS approver, de.username AS deleter&#10;     FROM submissions s&#10;     JOIN users au ON au.id = s.user_id&#10;     LEFT JOIN users ap ON ap.id = s.approved_by&#10;     LEFT JOIN users de ON de.id = s.deleted_by&#10;     WHERE s.status = 'approved'&#10;     ORDER BY s.approved_at DESC&#10;     LIMIT 50`&#10;  );&#10;&#10;  const deleted = await query&lt;SubmissionRow[]&gt;(&#10;    `SELECT s.*, au.username AS author,&#10;            ap.username AS approver, de.username AS deleter&#10;     FROM submissions s&#10;     JOIN users au ON au.id = s.user_id&#10;     LEFT JOIN users ap ON ap.id = s.approved_by&#10;     LEFT JOIN users de ON de.id = s.deleted_by&#10;     WHERE s.status = 'deleted'&#10;     ORDER BY s.deleted_at DESC&#10;     LIMIT 50`&#10;  );&#10;&#10;  const audit = await query&lt;AuditRow[]&gt;(&#10;    `SELECT a.*, u.username AS actor, LEFT(s.text, 80) AS preview&#10;     FROM submission_audit a&#10;     JOIN users u ON u.id = a.actor_user_id&#10;     JOIN submissions s ON s.id = a.submission_id&#10;     ORDER BY a.created_at DESC&#10;     LIMIT 60`&#10;  );&#10;&#10;  const users = await query&lt;UserRow[]&gt;(&#10;    &quot;SELECT id, username, role FROM users ORDER BY id DESC&quot;&#10;  );&#10;&#10;  return (&#10;    &lt;div className=&quot;relative min-h-dvh overflow-hidden bg-gradient-to-b from-indigo-50/70 to-white dark:from-slate-950 dark:to-slate-900&quot;&gt;&#10;      {/* Ambient background gradients */}&#10;      &lt;div className=&quot;pointer-events-none absolute inset-0 -z-10&quot;&gt;&#10;        &lt;div className=&quot;absolute -top-40 -left-40 h-[520px] w-[520px] rounded-full bg-gradient-to-br from-indigo-400/25 via-indigo-500/15 to-sky-400/25 blur-3xl opacity-70 dark:opacity-40&quot; /&gt;&#10;        &lt;div className=&quot;absolute top-1/3 -right-32 h-[420px] w-[420px] rounded-full bg-gradient-to-tr from-sky-400/30 via-indigo-400/20 to-fuchsia-400/25 blur-3xl opacity-75 dark:opacity-40&quot; /&gt;&#10;        &lt;div className=&quot;absolute bottom-0 left-1/2 -translate-x-1/2 h-64 w-[80%] bg-gradient-to-t from-indigo-100/70 via-transparent to-transparent dark:from-indigo-900/30&quot; /&gt;&#10;      &lt;/div&gt;&#10;&#10;      &lt;div className=&quot;max-w-6xl mx-auto px-4 py-12 space-y-10&quot;&gt;&#10;        &lt;FancyHeading center subtitle=&quot;Moderiere Einsendungen, verwalte Accounts und behalte den Überblick.&quot;&gt;&#10;          Admin-Dashboard&#10;        &lt;/FancyHeading&gt;&#10;&#10;        {/* Statistiken */}&#10;        &lt;div className=&quot;grid gap-6 md:grid-cols-4&quot;&gt;&#10;          {[&#10;            { label: &quot;Gesamt&quot;, value: stats?.total || 0, icon: &lt;Users className=&quot;h-5 w-5&quot; /&gt; },&#10;            { label: &quot;Ausstehend&quot;, value: stats?.pending || 0, icon: &lt;Clock className=&quot;h-5 w-5&quot; /&gt; },&#10;            { label: &quot;Genehmigt&quot;, value: stats?.approved || 0, icon: &lt;CheckCircle2 className=&quot;h-5 w-5&quot; /&gt; },&#10;            { label: &quot;Gelöscht&quot;, value: stats?.deleted || 0, icon: &lt;Trash2 className=&quot;h-5 w-5&quot; /&gt; },&#10;          ].map((s, i) =&gt; (&#10;            &lt;GlassCard key={s.label} delay={i * 0.06}&gt;&#10;              &lt;div className=&quot;flex items-center gap-4&quot;&gt;&#10;                &lt;div className=&quot;h-11 w-11 rounded-2xl bg-indigo-500/10 text-indigo-600 ring-1 ring-indigo-500/30 flex items-center justify-center&quot;&gt;&#10;                  {s.icon}&#10;                &lt;/div&gt;&#10;                &lt;div&gt;&#10;                  &lt;div className=&quot;text-sm text-base-muted&quot;&gt;{s.label}&lt;/div&gt;&#10;                  &lt;div className=&quot;text-xl font-semibold text-base-strong&quot;&gt;{s.value}&lt;/div&gt;&#10;                &lt;/div&gt;&#10;              &lt;/div&gt;&#10;            &lt;/GlassCard&gt;&#10;          ))}&#10;        &lt;/div&gt;&#10;&#10;        &lt;div className=&quot;grid lg:grid-cols-3 gap-8&quot;&gt;&#10;          {/* Moderationsliste */}&#10;          &lt;div className=&quot;lg:col-span-2 space-y-8&quot;&gt;&#10;            &lt;TiltCard&gt;&#10;              &lt;GlassCard&#10;                header={&#10;                  &lt;div className=&quot;flex items-center gap-3&quot;&gt;&#10;                    &lt;span className=&quot;inline-flex h-9 w-9 items-center justify-center rounded-2xl bg-indigo-500/10 text-indigo-600 ring-1 ring-indigo-500/20&quot;&gt;&#10;                      &lt;FileText className=&quot;h-5 w-5&quot; /&gt;&#10;                    &lt;/span&gt;&#10;                    &lt;div&gt;&#10;                      &lt;h3 className=&quot;text-lg font-semibold text-base-strong&quot;&gt;Ausstehende Einsendungen&lt;/h3&gt;&#10;                      &lt;p className=&quot;text-sm text-base-muted&quot;&gt;Prüfen, genehmigen oder löschen.&lt;/p&gt;&#10;                    &lt;/div&gt;&#10;                  &lt;/div&gt;&#10;                }&#10;              &gt;&#10;                {pending.length === 0 ? (&#10;                  &lt;p className=&quot;text-sm text-base-muted&quot;&gt;Keine ausstehenden Einsendungen.&lt;/p&gt;&#10;                ) : (&#10;                  &lt;div className=&quot;space-y-4&quot;&gt;&#10;                    {pending.map((p) =&gt; (&#10;                      &lt;div key={p.id} className=&quot;rounded-2xl ring-1 ring-black/5 dark:ring-white/10 bg-white/60 dark:bg-slate-800/60 p-4&quot;&gt;&#10;                        &lt;div className=&quot;flex items-start justify-between gap-4&quot;&gt;&#10;                          &lt;div&gt;&#10;                            &lt;div className=&quot;text-sm text-base-muted flex items-center gap-2&quot;&gt;&#10;                              &lt;User2 className=&quot;h-4 w-4 text-indigo-600&quot; /&gt;&#10;                              &lt;span&gt;{p.author}&lt;/span&gt;&#10;                              &lt;span className=&quot;opacity-60&quot;&gt;•&lt;/span&gt;&#10;                              &lt;span&gt;{new Date(p.created_at).toLocaleString(&quot;de-DE&quot;)}&lt;/span&gt;&#10;                            &lt;/div&gt;&#10;                            &lt;div className=&quot;mt-2 text-sm text-base-strong whitespace-pre-wrap&quot;&gt;&#10;                              {p.text}&#10;                            &lt;/div&gt;&#10;                            {(p.name || p.phone) &amp;&amp; (&#10;                              &lt;div className=&quot;mt-2 text-xs text-base-muted&quot;&gt;{[p.name, p.phone].filter(Boolean).join(&quot; · &quot;)}&lt;/div&gt;&#10;                            )}&#10;                          &lt;/div&gt;&#10;                          &lt;div className=&quot;shrink-0 flex flex-col gap-2&quot;&gt;&#10;                            &lt;form action={approveSubmissionAction}&gt;&#10;                              &lt;input type=&quot;hidden&quot; name=&quot;id&quot; value={p.id} /&gt;&#10;                              &lt;GlowButton variant=&quot;primary&quot; className=&quot;px-3 py-2 text-sm&quot; iconLeft={&lt;CheckCircle2 className=&quot;h-4 w-4&quot; /&gt;}&gt;Genehmigen&lt;/GlowButton&gt;&#10;                            &lt;/form&gt;&#10;                            &lt;form action={deleteSubmissionAction}&gt;&#10;                              &lt;input type=&quot;hidden&quot; name=&quot;id&quot; value={p.id} /&gt;&#10;                              &lt;GlowButton variant=&quot;secondary&quot; className=&quot;px-3 py-2 text-sm&quot; iconLeft={&lt;XCircle className=&quot;h-4 w-4&quot; /&gt;}&gt;Löschen&lt;/GlowButton&gt;&#10;                            &lt;/form&gt;&#10;                          &lt;/div&gt;&#10;                        &lt;/div&gt;&#10;                      &lt;/div&gt;&#10;                    ))}&#10;                  &lt;/div&gt;&#10;                )}&#10;              &lt;/GlassCard&gt;&#10;            &lt;/TiltCard&gt;&#10;&#10;            &lt;GlassCard&#10;              header={&lt;div className=&quot;text-lg font-semibold text-base-strong&quot;&gt;Genehmigt (zuletzt)&lt;/div&gt;}&#10;            &gt;&#10;              {approved.length === 0 ? (&#10;                &lt;p className=&quot;text-sm text-base-muted&quot;&gt;Noch nichts genehmigt.&lt;/p&gt;&#10;              ) : (&#10;                &lt;div className=&quot;space-y-3&quot;&gt;&#10;                  {approved.map((a) =&gt; (&#10;                    &lt;div key={a.id} className=&quot;flex items-start justify-between gap-4 rounded-2xl ring-1 ring-black/5 dark:ring-white/10 bg-white/60 dark:bg-slate-800/60 p-4&quot;&gt;&#10;                      &lt;div&gt;&#10;                        &lt;div className=&quot;text-xs text-base-muted&quot;&gt;&#10;                          Von {a.author} • genehmigt von {a.approver || &quot;—&quot;} am {a.approved_at ? new Date(a.approved_at).toLocaleString(&quot;de-DE&quot;) : &quot;—&quot;}&#10;                        &lt;/div&gt;&#10;                        &lt;div className=&quot;mt-1 text-sm text-base-strong line-clamp-3 whitespace-pre-wrap&quot;&gt;{a.text}&lt;/div&gt;&#10;                      &lt;/div&gt;&#10;                      &lt;form action={deleteSubmissionAction}&gt;&#10;                        &lt;input type=&quot;hidden&quot; name=&quot;id&quot; value={a.id} /&gt;&#10;                        &lt;GlowButton variant=&quot;secondary&quot; className=&quot;px-3 py-2 text-sm&quot; iconLeft={&lt;Trash2 className=&quot;h-4 w-4&quot; /&gt;}&gt;Löschen&lt;/GlowButton&gt;&#10;                      &lt;/form&gt;&#10;                    &lt;/div&gt;&#10;                  ))}&#10;                &lt;/div&gt;&#10;              )}&#10;            &lt;/GlassCard&gt;&#10;&#10;            &lt;GlassCard&#10;              header={&lt;div className=&quot;text-lg font-semibold text-base-strong&quot;&gt;Gelöscht (zuletzt)&lt;/div&gt;}&#10;            &gt;&#10;              {deleted.length === 0 ? (&#10;                &lt;p className=&quot;text-sm text-base-muted&quot;&gt;Keine gelöschten Beiträge.&lt;/p&gt;&#10;              ) : (&#10;                &lt;div className=&quot;space-y-3&quot;&gt;&#10;                  {deleted.map((d) =&gt; (&#10;                    &lt;div key={d.id} className=&quot;flex items-start justify-between gap-4 rounded-2xl ring-1 ring-black/5 dark:ring-white/10 bg-white/60 dark:bg-slate-800/60 p-4&quot;&gt;&#10;                      &lt;div&gt;&#10;                        &lt;div className=&quot;text-xs text-base-muted&quot;&gt;&#10;                          Von {d.author} • gelöscht von {d.deleter || &quot;—&quot;} am {d.deleted_at ? new Date(d.deleted_at).toLocaleString(&quot;de-DE&quot;) : &quot;—&quot;}&#10;                        &lt;/div&gt;&#10;                        &lt;div className=&quot;mt-1 text-sm text-base-strong line-clamp-3 whitespace-pre-wrap&quot;&gt;{d.text}&lt;/div&gt;&#10;                      &lt;/div&gt;&#10;                      &lt;form action={restoreSubmissionAction}&gt;&#10;                        &lt;input type=&quot;hidden&quot; name=&quot;id&quot; value={d.id} /&gt;&#10;                        &lt;GlowButton variant=&quot;primary&quot; className=&quot;px-3 py-2 text-sm&quot; iconLeft={&lt;RotateCcw className=&quot;h-4 w-4&quot; /&gt;}&gt;Wiederherstellen&lt;/GlowButton&gt;&#10;                      &lt;/form&gt;&#10;                    &lt;/div&gt;&#10;                  ))}&#10;                &lt;/div&gt;&#10;              )}&#10;            &lt;/GlassCard&gt;&#10;          &lt;/div&gt;&#10;&#10;          {/* Audit + Benutzer */}&#10;          &lt;div className=&quot;lg:col-span-1 space-y-8&quot;&gt;&#10;            &lt;TiltCard&gt;&#10;              &lt;GlassCard&#10;                header={&lt;div className=&quot;text-lg font-semibold text-base-strong&quot;&gt;Aktivität&lt;/div&gt;}&#10;              &gt;&#10;                {audit.length === 0 ? (&#10;                  &lt;p className=&quot;text-sm text-base-muted&quot;&gt;Noch keine Aktivitäten.&lt;/p&gt;&#10;                ) : (&#10;                  &lt;div className=&quot;space-y-3&quot;&gt;&#10;                    {audit.map((e) =&gt; (&#10;                      &lt;div key={e.id} className=&quot;rounded-xl p-3 bg-white/60 dark:bg-slate-800/60 ring-1 ring-black/5 dark:ring-white/10&quot;&gt;&#10;                        &lt;div className=&quot;text-xs text-base-muted flex items-center justify-between gap-2&quot;&gt;&#10;                          &lt;span&gt;&#10;                            &lt;span className=&quot;font-medium text-base-strong&quot;&gt;{e.actor}&lt;/span&gt; – {e.action}&#10;                          &lt;/span&gt;&#10;                          &lt;span&gt;{new Date(e.created_at).toLocaleString(&quot;de-DE&quot;)}&lt;/span&gt;&#10;                        &lt;/div&gt;&#10;                        &lt;div className=&quot;mt-1 text-xs text-base-strong line-clamp-2&quot;&gt;{e.preview}&lt;/div&gt;&#10;                      &lt;/div&gt;&#10;                    ))}&#10;                  &lt;/div&gt;&#10;                )}&#10;              &lt;/GlassCard&gt;&#10;            &lt;/TiltCard&gt;&#10;&#10;            &lt;GlassCard&#10;              header={&lt;div className=&quot;text-lg font-semibold text-base-strong&quot;&gt;Benutzer verwalten&lt;/div&gt;}&#10;            &gt;&#10;              &lt;form action={createUserAction} className=&quot;grid grid-cols-1 sm:grid-cols-3 gap-3&quot;&gt;&#10;                &lt;input name=&quot;username&quot; placeholder=&quot;Username&quot; className=&quot;px-4 py-3 rounded-2xl bg-white/70 dark:bg-slate-800/60 shadow-inner outline-none focus:ring-2 focus:ring-indigo-300 dark:focus:ring-indigo-500 ring-1 ring-black/5 dark:ring-white/10&quot; /&gt;&#10;                &lt;input name=&quot;password&quot; placeholder=&quot;Passwort&quot; type=&quot;password&quot; className=&quot;px-4 py-3 rounded-2xl bg-white/70 dark:bg-slate-800/60 shadow-inner outline-none focus:ring-2 focus:ring-indigo-300 dark:focus:ring-indigo-500 ring-1 ring-black/5 dark:ring-white/10&quot; /&gt;&#10;                &lt;GlowButton variant=&quot;primary&quot; className=&quot;h-[42px]&quot;&gt;Erstellen&lt;/GlowButton&gt;&#10;              &lt;/form&gt;&#10;              &lt;div className=&quot;mt-5 divide-y divide-black/5 dark:divide-white/10&quot;&gt;&#10;                {users.map((u) =&gt; (&#10;                  &lt;div key={u.id} className=&quot;flex items-center justify-between py-3&quot;&gt;&#10;                    &lt;div className=&quot;text-sm&quot;&gt;&lt;span className=&quot;font-medium&quot;&gt;{u.username}&lt;/span&gt; &lt;span className=&quot;text-base-muted&quot;&gt;• {u.role}&lt;/span&gt;&lt;/div&gt;&#10;                    &lt;form action={deleteUserAction}&gt;&#10;                      &lt;input type=&quot;hidden&quot; name=&quot;id&quot; value={u.id} /&gt;&#10;                      &lt;GlowButton variant=&quot;secondary&quot; className=&quot;px-3 py-2 text-sm&quot; iconLeft={&lt;Trash2 className=&quot;h-4 w-4&quot; /&gt;}&gt;Löschen&lt;/GlowButton&gt;&#10;                    &lt;/form&gt;&#10;                  &lt;/div&gt;&#10;                ))}&#10;              &lt;/div&gt;&#10;            &lt;/GlassCard&gt;&#10;          &lt;/div&gt;&#10;        &lt;/div&gt;&#10;      &lt;/div&gt;&#10;    &lt;/div&gt;&#10;  );&#10;}&#10;" />
              <option name="updatedContent" value="import { redirect } from &quot;next/navigation&quot;;&#10;import { getSession } from &quot;@/lib/session&quot;;&#10;import { query } from &quot;@/lib/db&quot;;&#10;import { ensureModerationSchema } from &quot;@/lib/migrations&quot;;&#10;import FancyHeading from &quot;@/components/ui/FancyHeading&quot;;&#10;import GlassCard from &quot;@/components/ui/GlassCard&quot;;&#10;import GlowButton from &quot;@/components/ui/GlowButton&quot;;&#10;import TiltCard from &quot;@/components/ui/TiltCard&quot;;&#10;import {&#10;  approveSubmissionAction,&#10;  deleteSubmissionAction,&#10;  restoreSubmissionAction,&#10;  createUserAction,&#10;  deleteUserAction,&#10;} from &quot;./actions&quot;;&#10;import {&#10;  CheckCircle2,&#10;  XCircle,&#10;  RotateCcw,&#10;  User2,&#10;  FileText,&#10;  Users,&#10;  Trash2,&#10;  Clock,&#10;} from &quot;lucide-react&quot;;&#10;&#10;export const dynamic = &quot;force-dynamic&quot;;&#10;&#10;type SubmissionRow = {&#10;  id: number;&#10;  user_id: number;&#10;  text: string;&#10;  name: string | null;&#10;  phone: string | null;&#10;  created_at: string;&#10;  status: &quot;pending&quot; | &quot;approved&quot; | &quot;deleted&quot;;&#10;  approved_by: number | null;&#10;  approved_at: string | null;&#10;  deleted_by: number | null;&#10;  deleted_at: string | null;&#10;  author: string;&#10;  approver: string | null;&#10;  deleter: string | null;&#10;};&#10;&#10;type AuditRow = {&#10;  id: number;&#10;  submission_id: number;&#10;  action: &quot;create&quot; | &quot;approve&quot; | &quot;delete&quot; | &quot;restore&quot;;&#10;  actor_user_id: number;&#10;  created_at: string;&#10;  actor: string;&#10;  preview: string;&#10;};&#10;&#10;type UserRow = { id: number; username: string; role: &quot;user&quot; | &quot;admin&quot; };&#10;&#10;export default async function AdminPage() {&#10;  const session = await getSession();&#10;  if (!session || session.role !== &quot;admin&quot;) redirect(&quot;/login&quot;);&#10;&#10;  // Ensure schema is ready (adds status columns + audit table if missing)&#10;  await ensureModerationSchema();&#10;&#10;  const [stats] = (await query&lt;&#10;    { pending: number; approved: number; deleted: number; total: number }[]&#10;  &gt;(&#10;    &quot;SELECT SUM(status='pending') AS pending, SUM(status='approved') AS approved, SUM(status='deleted') AS deleted, COUNT(*) AS total FROM submissions&quot;&#10;  )) || [{ pending: 0, approved: 0, deleted: 0, total: 0 }];&#10;&#10;  const pending = await query&lt;SubmissionRow[]&gt;(&#10;    `SELECT s.*, au.username AS author,&#10;            ap.username AS approver, de.username AS deleter&#10;     FROM submissions s&#10;     JOIN users au ON au.id = s.user_id&#10;     LEFT JOIN users ap ON ap.id = s.approved_by&#10;     LEFT JOIN users de ON de.id = s.deleted_by&#10;     WHERE s.status = 'pending'&#10;     ORDER BY s.created_at DESC`&#10;  );&#10;&#10;  const approved = await query&lt;SubmissionRow[]&gt;(&#10;    `SELECT s.*, au.username AS author,&#10;            ap.username AS approver, de.username AS deleter&#10;     FROM submissions s&#10;     JOIN users au ON au.id = s.user_id&#10;     LEFT JOIN users ap ON ap.id = s.approved_by&#10;     LEFT JOIN users de ON de.id = s.deleted_by&#10;     WHERE s.status = 'approved'&#10;     ORDER BY s.approved_at DESC&#10;     LIMIT 50`&#10;  );&#10;&#10;  const deleted = await query&lt;SubmissionRow[]&gt;(&#10;    `SELECT s.*, au.username AS author,&#10;            ap.username AS approver, de.username AS deleter&#10;     FROM submissions s&#10;     JOIN users au ON au.id = s.user_id&#10;     LEFT JOIN users ap ON ap.id = s.approved_by&#10;     LEFT JOIN users de ON de.id = s.deleted_by&#10;     WHERE s.status = 'deleted'&#10;     ORDER BY s.deleted_at DESC&#10;     LIMIT 50`&#10;  );&#10;&#10;  const audit = await query&lt;AuditRow[]&gt;(&#10;    `SELECT a.*, u.username AS actor, LEFT(s.text, 80) AS preview&#10;     FROM submission_audit a&#10;     JOIN users u ON u.id = a.actor_user_id&#10;     JOIN submissions s ON s.id = a.submission_id&#10;     ORDER BY a.created_at DESC&#10;     LIMIT 60`&#10;  );&#10;&#10;  const users = await query&lt;UserRow[]&gt;(&#10;    &quot;SELECT id, username, role FROM users ORDER BY id DESC&quot;&#10;  );&#10;&#10;  return (&#10;    &lt;div className=&quot;relative min-h-dvh overflow-hidden bg-gradient-to-b from-indigo-50/70 to-white dark:from-slate-950 dark:to-slate-900&quot;&gt;&#10;      {/* Ambient background gradients */}&#10;      &lt;div className=&quot;pointer-events-none absolute inset-0 -z-10&quot;&gt;&#10;        &lt;div className=&quot;absolute -top-40 -left-40 h-[520px] w-[520px] rounded-full bg-gradient-to-br from-indigo-400/25 via-indigo-500/15 to-sky-400/25 blur-3xl opacity-70 dark:opacity-40&quot; /&gt;&#10;        &lt;div className=&quot;absolute top-1/3 -right-32 h-[420px] w-[420px] rounded-full bg-gradient-to-tr from-sky-400/30 via-indigo-400/20 to-fuchsia-400/25 blur-3xl opacity-75 dark:opacity-40&quot; /&gt;&#10;        &lt;div className=&quot;absolute bottom-0 left-1/2 -translate-x-1/2 h-64 w-[80%] bg-gradient-to-t from-indigo-100/70 via-transparent to-transparent dark:from-indigo-900/30&quot; /&gt;&#10;      &lt;/div&gt;&#10;&#10;      &lt;div className=&quot;max-w-6xl mx-auto px-4 py-12 space-y-10&quot;&gt;&#10;        &lt;FancyHeading center subtitle=&quot;Moderiere Einsendungen, verwalte Accounts und behalte den Überblick.&quot;&gt;&#10;          Admin-Dashboard&#10;        &lt;/FancyHeading&gt;&#10;&#10;        {/* Statistiken */}&#10;        &lt;div className=&quot;grid gap-6 md:grid-cols-4&quot;&gt;&#10;          {[&#10;            { label: &quot;Gesamt&quot;, value: stats?.total || 0, icon: &lt;Users className=&quot;h-5 w-5&quot; /&gt; },&#10;            { label: &quot;Ausstehend&quot;, value: stats?.pending || 0, icon: &lt;Clock className=&quot;h-5 w-5&quot; /&gt; },&#10;            { label: &quot;Genehmigt&quot;, value: stats?.approved || 0, icon: &lt;CheckCircle2 className=&quot;h-5 w-5&quot; /&gt; },&#10;            { label: &quot;Gelöscht&quot;, value: stats?.deleted || 0, icon: &lt;Trash2 className=&quot;h-5 w-5&quot; /&gt; },&#10;          ].map((s, i) =&gt; (&#10;            &lt;GlassCard key={s.label} delay={i * 0.06}&gt;&#10;              &lt;div className=&quot;flex items-center gap-4&quot;&gt;&#10;                &lt;div className=&quot;h-11 w-11 rounded-2xl bg-indigo-500/10 text-indigo-600 ring-1 ring-indigo-500/30 flex items-center justify-center&quot;&gt;&#10;                  {s.icon}&#10;                &lt;/div&gt;&#10;                &lt;div&gt;&#10;                  &lt;div className=&quot;text-sm text-base-muted&quot;&gt;{s.label}&lt;/div&gt;&#10;                  &lt;div className=&quot;text-xl font-semibold text-base-strong&quot;&gt;{s.value}&lt;/div&gt;&#10;                &lt;/div&gt;&#10;              &lt;/div&gt;&#10;            &lt;/GlassCard&gt;&#10;          ))}&#10;        &lt;/div&gt;&#10;&#10;        &lt;div className=&quot;grid lg:grid-cols-3 gap-8&quot;&gt;&#10;          {/* Moderationsliste */}&#10;          &lt;div className=&quot;lg:col-span-2 space-y-8&quot;&gt;&#10;            &lt;TiltCard&gt;&#10;              &lt;GlassCard&#10;                header={&#10;                  &lt;div className=&quot;flex items-center gap-3&quot;&gt;&#10;                    &lt;span className=&quot;inline-flex h-9 w-9 items-center justify-center rounded-2xl bg-indigo-500/10 text-indigo-600 ring-1 ring-indigo-500/20&quot;&gt;&#10;                      &lt;FileText className=&quot;h-5 w-5&quot; /&gt;&#10;                    &lt;/span&gt;&#10;                    &lt;div&gt;&#10;                      &lt;h3 className=&quot;text-lg font-semibold text-base-strong&quot;&gt;Ausstehende Einsendungen&lt;/h3&gt;&#10;                      &lt;p className=&quot;text-sm text-base-muted&quot;&gt;Prüfen, genehmigen oder löschen.&lt;/p&gt;&#10;                    &lt;/div&gt;&#10;                  &lt;/div&gt;&#10;                }&#10;              &gt;&#10;                {pending.length === 0 ? (&#10;                  &lt;p className=&quot;text-sm text-base-muted&quot;&gt;Keine ausstehenden Einsendungen.&lt;/p&gt;&#10;                ) : (&#10;                  &lt;div className=&quot;space-y-4&quot;&gt;&#10;                    {pending.map((p) =&gt; (&#10;                      &lt;div key={p.id} className=&quot;rounded-2xl ring-1 ring-black/5 dark:ring-white/10 bg-white/60 dark:bg-slate-800/60 p-4&quot;&gt;&#10;                        &lt;div className=&quot;flex items-start justify-between gap-4&quot;&gt;&#10;                          &lt;div&gt;&#10;                            &lt;div className=&quot;text-sm text-base-muted flex items-center gap-2&quot;&gt;&#10;                              &lt;User2 className=&quot;h-4 w-4 text-indigo-600&quot; /&gt;&#10;                              &lt;span&gt;{p.author}&lt;/span&gt;&#10;                              &lt;span className=&quot;opacity-60&quot;&gt;•&lt;/span&gt;&#10;                              &lt;span&gt;{new Date(p.created_at).toLocaleString(&quot;de-DE&quot;)}&lt;/span&gt;&#10;                            &lt;/div&gt;&#10;                            &lt;div className=&quot;mt-2 text-sm text-base-strong whitespace-pre-wrap&quot;&gt;&#10;                              {p.text}&#10;                            &lt;/div&gt;&#10;                            {(p.name || p.phone) &amp;&amp; (&#10;                              &lt;div className=&quot;mt-2 text-xs text-base-muted&quot;&gt;{[p.name, p.phone].filter(Boolean).join(&quot; · &quot;)}&lt;/div&gt;&#10;                            )}&#10;                          &lt;/div&gt;&#10;                          &lt;div className=&quot;shrink-0 flex flex-col gap-2&quot;&gt;&#10;                            &lt;form action={approveSubmissionAction}&gt;&#10;                              &lt;input type=&quot;hidden&quot; name=&quot;id&quot; value={p.id} /&gt;&#10;                              &lt;GlowButton variant=&quot;primary&quot; className=&quot;px-3 py-2 text-sm&quot; iconLeft={&lt;CheckCircle2 className=&quot;h-4 w-4&quot; /&gt;}&gt;Genehmigen&lt;/GlowButton&gt;&#10;                            &lt;/form&gt;&#10;                            &lt;form action={deleteSubmissionAction}&gt;&#10;                              &lt;input type=&quot;hidden&quot; name=&quot;id&quot; value={p.id} /&gt;&#10;                              &lt;GlowButton variant=&quot;secondary&quot; className=&quot;px-3 py-2 text-sm&quot; iconLeft={&lt;XCircle className=&quot;h-4 w-4&quot; /&gt;}&gt;Löschen&lt;/GlowButton&gt;&#10;                            &lt;/form&gt;&#10;                          &lt;/div&gt;&#10;                        &lt;/div&gt;&#10;                      &lt;/div&gt;&#10;                    ))}&#10;                  &lt;/div&gt;&#10;                )}&#10;              &lt;/GlassCard&gt;&#10;            &lt;/TiltCard&gt;&#10;&#10;            &lt;GlassCard&#10;              header={&lt;div className=&quot;text-lg font-semibold text-base-strong&quot;&gt;Genehmigt (zuletzt)&lt;/div&gt;}&#10;            &gt;&#10;              {approved.length === 0 ? (&#10;                &lt;p className=&quot;text-sm text-base-muted&quot;&gt;Noch nichts genehmigt.&lt;/p&gt;&#10;              ) : (&#10;                &lt;div className=&quot;space-y-3&quot;&gt;&#10;                  {approved.map((a) =&gt; (&#10;                    &lt;div key={a.id} className=&quot;flex items-start justify-between gap-4 rounded-2xl ring-1 ring-black/5 dark:ring-white/10 bg-white/60 dark:bg-slate-800/60 p-4&quot;&gt;&#10;                      &lt;div&gt;&#10;                        &lt;div className=&quot;text-xs text-base-muted&quot;&gt;&#10;                          Von {a.author} • genehmigt von {a.approver || &quot;—&quot;} am {a.approved_at ? new Date(a.approved_at).toLocaleString(&quot;de-DE&quot;) : &quot;—&quot;}&#10;                        &lt;/div&gt;&#10;                        &lt;div className=&quot;mt-1 text-sm text-base-strong line-clamp-3 whitespace-pre-wrap&quot;&gt;{a.text}&lt;/div&gt;&#10;                      &lt;/div&gt;&#10;                      &lt;form action={deleteSubmissionAction}&gt;&#10;                        &lt;input type=&quot;hidden&quot; name=&quot;id&quot; value={a.id} /&gt;&#10;                        &lt;GlowButton variant=&quot;secondary&quot; className=&quot;px-3 py-2 text-sm&quot; iconLeft={&lt;Trash2 className=&quot;h-4 w-4&quot; /&gt;}&gt;Löschen&lt;/GlowButton&gt;&#10;                      &lt;/form&gt;&#10;                    &lt;/div&gt;&#10;                  ))}&#10;                &lt;/div&gt;&#10;              )}&#10;            &lt;/GlassCard&gt;&#10;&#10;            &lt;GlassCard&#10;              header={&lt;div className=&quot;text-lg font-semibold text-base-strong&quot;&gt;Gelöscht (zuletzt)&lt;/div&gt;}&#10;            &gt;&#10;              {deleted.length === 0 ? (&#10;                &lt;p className=&quot;text-sm text-base-muted&quot;&gt;Keine gelöschten Beiträge.&lt;/p&gt;&#10;              ) : (&#10;                &lt;div className=&quot;space-y-3&quot;&gt;&#10;                  {deleted.map((d) =&gt; (&#10;                    &lt;div key={d.id} className=&quot;flex items-start justify-between gap-4 rounded-2xl ring-1 ring-black/5 dark:ring-white/10 bg-white/60 dark:bg-slate-800/60 p-4&quot;&gt;&#10;                      &lt;div&gt;&#10;                        &lt;div className=&quot;text-xs text-base-muted&quot;&gt;&#10;                          Von {d.author} • gelöscht von {d.deleter || &quot;—&quot;} am {d.deleted_at ? new Date(d.deleted_at).toLocaleString(&quot;de-DE&quot;) : &quot;—&quot;}&#10;                        &lt;/div&gt;&#10;                        &lt;div className=&quot;mt-1 text-sm text-base-strong line-clamp-3 whitespace-pre-wrap&quot;&gt;{d.text}&lt;/div&gt;&#10;                      &lt;/div&gt;&#10;                      &lt;form action={restoreSubmissionAction}&gt;&#10;                        &lt;input type=&quot;hidden&quot; name=&quot;id&quot; value={d.id} /&gt;&#10;                        &lt;GlowButton variant=&quot;primary&quot; className=&quot;px-3 py-2 text-sm&quot; iconLeft={&lt;RotateCcw className=&quot;h-4 w-4&quot; /&gt;}&gt;Wiederherstellen&lt;/GlowButton&gt;&#10;                      &lt;/form&gt;&#10;                    &lt;/div&gt;&#10;                  ))}&#10;                &lt;/div&gt;&#10;              )}&#10;            &lt;/GlassCard&gt;&#10;          &lt;/div&gt;&#10;&#10;          {/* Audit + Benutzer */}&#10;          &lt;div className=&quot;lg:col-span-1 space-y-8&quot;&gt;&#10;            &lt;TiltCard&gt;&#10;              &lt;GlassCard&#10;                header={&lt;div className=&quot;text-lg font-semibold text-base-strong&quot;&gt;Aktivität&lt;/div&gt;}&#10;              &gt;&#10;                {audit.length === 0 ? (&#10;                  &lt;p className=&quot;text-sm text-base-muted&quot;&gt;Noch keine Aktivitäten.&lt;/p&gt;&#10;                ) : (&#10;                  &lt;div className=&quot;space-y-3&quot;&gt;&#10;                    {audit.map((e) =&gt; (&#10;                      &lt;div key={e.id} className=&quot;rounded-xl p-3 bg-white/60 dark:bg-slate-800/60 ring-1 ring-black/5 dark:ring-white/10&quot;&gt;&#10;                        &lt;div className=&quot;text-xs text-base-muted flex items-center justify-between gap-2&quot;&gt;&#10;                          &lt;span&gt;&#10;                            &lt;span className=&quot;font-medium text-base-strong&quot;&gt;{e.actor}&lt;/span&gt; – {e.action}&#10;                          &lt;/span&gt;&#10;                          &lt;span&gt;{new Date(e.created_at).toLocaleString(&quot;de-DE&quot;)}&lt;/span&gt;&#10;                        &lt;/div&gt;&#10;                        &lt;div className=&quot;mt-1 text-xs text-base-strong line-clamp-2&quot;&gt;{e.preview}&lt;/div&gt;&#10;                      &lt;/div&gt;&#10;                    ))}&#10;                  &lt;/div&gt;&#10;                )}&#10;              &lt;/GlassCard&gt;&#10;            &lt;/TiltCard&gt;&#10;&#10;            &lt;GlassCard&#10;              header={&lt;div className=&quot;text-lg font-semibold text-base-strong&quot;&gt;Benutzer verwalten&lt;/div&gt;}&#10;            &gt;&#10;              &lt;form action={createUserAction} className=&quot;grid grid-cols-1 sm:grid-cols-3 gap-3&quot;&gt;&#10;                &lt;input name=&quot;username&quot; placeholder=&quot;Username&quot; className=&quot;px-4 py-3 rounded-2xl bg-white/70 dark:bg-slate-800/60 shadow-inner outline-none focus:ring-2 focus:ring-indigo-300 dark:focus:ring-indigo-500 ring-1 ring-black/5 dark:ring-white/10&quot; /&gt;&#10;                &lt;input name=&quot;password&quot; placeholder=&quot;Passwort&quot; type=&quot;password&quot; className=&quot;px-4 py-3 rounded-2xl bg-white/70 dark:bg-slate-800/60 shadow-inner outline-none focus:ring-2 focus:ring-indigo-300 dark:focus:ring-indigo-500 ring-1 ring-black/5 dark:ring-white/10&quot; /&gt;&#10;                &lt;GlowButton variant=&quot;primary&quot; className=&quot;h-[42px]&quot;&gt;Erstellen&lt;/GlowButton&gt;&#10;              &lt;/form&gt;&#10;              &lt;div className=&quot;mt-5 divide-y divide-black/5 dark:divide-white/10&quot;&gt;&#10;                {users.map((u) =&gt; (&#10;                  &lt;div key={u.id} className=&quot;flex items-center justify-between py-3&quot;&gt;&#10;                    &lt;div className=&quot;text-sm&quot;&gt;&lt;span className=&quot;font-medium&quot;&gt;{u.username}&lt;/span&gt; &lt;span className=&quot;text-base-muted&quot;&gt;• {u.role}&lt;/span&gt;&lt;/div&gt;&#10;                    &lt;form action={deleteUserAction}&gt;&#10;                      &lt;input type=&quot;hidden&quot; name=&quot;id&quot; value={u.id} /&gt;&#10;                      &lt;GlowButton variant=&quot;secondary&quot; className=&quot;px-3 py-2 text-sm&quot; iconLeft={&lt;Trash2 className=&quot;h-4 w-4&quot; /&gt;}&gt;Löschen&lt;/GlowButton&gt;&#10;                    &lt;/form&gt;&#10;                  &lt;/div&gt;&#10;                ))}&#10;              &lt;/div&gt;&#10;            &lt;/GlassCard&gt;&#10;          &lt;/div&gt;&#10;        &lt;/div&gt;&#10;      &lt;/div&gt;&#10;    &lt;/div&gt;&#10;  );&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/phase-1/page.tsx">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/phase-1/page.tsx" />
              <option name="originalContent" value="import { redirect } from 'next/navigation';&#10;import { getSession } from '@/lib/session';&#10;import { getDbPool } from '@/lib/db';&#10;import FancyHeading from '@/components/ui/FancyHeading';&#10;import GlassCard from '@/components/ui/GlassCard';&#10;import GlowButton from '@/components/ui/GlowButton';&#10;import MotionFade from '@/components/ui/MotionFade';&#10;import TiltCard from '@/components/ui/TiltCard';&#10;import SubmissionForm from './SubmissionForm';&#10;import type { ResultSetHeader } from 'mysql2';&#10;import { Info, Shield, Sparkles, FileText, CheckCircle2 } from 'lucide-react';&#10;&#10;export const dynamic = 'force-dynamic';&#10;&#10;async function submitAction(formData: FormData) {&#10;  'use server';&#10;  const session = await getSession();&#10;  if (!session) redirect('/login');&#10;  const text = String(formData.get('text') || '').slice(0, 2000);&#10;  const name = String(formData.get('name') || '') || null;&#10;  const phone = String(formData.get('phone') || '') || null;&#10;  if (!text.trim()) return;&#10;&#10;  const conn = await getDbPool().getConnection();&#10;  try {&#10;    await conn.beginTransaction();&#10;    const [res] = await conn.execute&lt;ResultSetHeader&gt;(&#10;      'INSERT INTO submissions (user_id, text, name, phone) VALUES (?, ?, ?, ?)',&#10;      [session.userId, text, name, phone]&#10;    );&#10;    const submissionId = res.insertId;&#10;    if (submissionId) {&#10;      await conn.execute(&#10;        &quot;INSERT INTO submission_audit (submission_id, action, actor_user_id) VALUES (?, 'create', ?)&quot;,&#10;        [submissionId, session.userId]&#10;      );&#10;    }&#10;    await conn.commit();&#10;  } catch (e) {&#10;    await conn.rollback();&#10;    throw e;&#10;  } finally {&#10;    conn.release();&#10;  }&#10;  redirect('/phase-1?success=1');&#10;}&#10;&#10;export default async function Phase1Page({&#10;  searchParams,&#10;}: {&#10;  searchParams?: { success?: string };&#10;}) {&#10;  const session = await getSession();&#10;  if (!session) redirect('/login');&#10;  const isSuccess = searchParams?.success === '1';&#10;&#10;  return (&#10;    &lt;div className=&quot;relative min-h-dvh bg-gradient-to-b from-indigo-50/70 to-white dark:from-slate-950 dark:to-slate-900 overflow-hidden&quot;&gt;&#10;      {/* Ambient background gradients */}&#10;      &lt;div className=&quot;pointer-events-none absolute inset-0 -z-10&quot;&gt;&#10;        &lt;div className=&quot;absolute -top-40 -left-40 h-[520px] w-[520px] rounded-full bg-gradient-to-br from-indigo-400/25 via-indigo-500/15 to-sky-400/25 blur-3xl opacity-70 dark:opacity-40&quot; /&gt;&#10;        &lt;div className=&quot;absolute top-1/3 -right-32 h-[420px] w-[420px] rounded-full bg-gradient-to-tr from-sky-400/30 via-indigo-400/20 to-fuchsia-400/25 blur-3xl opacity-75 dark:opacity-40&quot; /&gt;&#10;        &lt;div className=&quot;absolute bottom-0 left-1/2 -translate-x-1/2 h-64 w-[80%] bg-gradient-to-t from-indigo-100/70 via-transparent to-transparent dark:from-indigo-900/30&quot; /&gt;&#10;      &lt;/div&gt;&#10;&#10;      &lt;div className=&quot;max-w-5xl mx-auto px-4 py-12&quot;&gt;&#10;        &lt;FancyHeading&#10;          center&#10;          subtitle=&quot;Schick uns deinen Beitrag fürs Jahrbuch – persönlich, kreativ oder ganz sachlich. Wir kümmern uns um den Rest.&quot;&#10;        &gt;&#10;          Phase 1 – Einsenden&#10;        &lt;/FancyHeading&gt;&#10;&#10;        {isSuccess &amp;&amp; (&#10;          &lt;MotionFade&gt;&#10;            &lt;GlassCard&#10;              fade={false}&#10;              className=&quot;mb-8 bg-[linear-gradient(180deg,rgba(22,163,74,0.08),rgba(22,163,74,0.02))]&quot;&#10;              header={&#10;                &lt;div className=&quot;flex items-center gap-3 text-emerald-700 dark:text-emerald-300&quot;&gt;&#10;                  &lt;span className=&quot;inline-flex h-9 w-9 items-center justify-center rounded-2xl bg-emerald-500/10 ring-1 ring-emerald-500/20&quot;&gt;&#10;                    &lt;CheckCircle2 className=&quot;h-5 w-5&quot; /&gt;&#10;                  &lt;/span&gt;&#10;                  &lt;h3 className=&quot;text-lg font-semibold&quot;&gt;Danke für deinen Beitrag!&lt;/h3&gt;&#10;                &lt;/div&gt;&#10;              }&#10;            &gt;&#10;              &lt;p className=&quot;text-sm text-base-muted&quot;&gt;&#10;                Dein Text wurde gespeichert. Du kannst gerne noch einen weiteren Beitrag einsenden.&#10;              &lt;/p&gt;&#10;              &lt;div className=&quot;pt-4&quot;&gt;&#10;                &lt;GlowButton as=&quot;a&quot; href=&quot;/&quot; variant=&quot;secondary&quot;&gt;&#10;                  Zur Startseite&#10;                &lt;/GlowButton&gt;&#10;              &lt;/div&gt;&#10;            &lt;/GlassCard&gt;&#10;          &lt;/MotionFade&gt;&#10;        )}&#10;&#10;        &lt;div className=&quot;grid grid-cols-1 lg:grid-cols-3 gap-6 lg:gap-8&quot;&gt;&#10;          {/* Formular */}&#10;          &lt;div className=&quot;lg:col-span-2&quot;&gt;&#10;            &lt;GlassCard&#10;              header={&#10;                &lt;div className=&quot;flex items-center gap-3&quot;&gt;&#10;                  &lt;span className=&quot;inline-flex h-9 w-9 items-center justify-center rounded-2xl bg-indigo-500/10 text-indigo-600 ring-1 ring-indigo-500/20&quot;&gt;&#10;                    &lt;FileText className=&quot;h-5 w-5&quot; /&gt;&#10;                  &lt;/span&gt;&#10;                  &lt;div&gt;&#10;                    &lt;h3 className=&quot;text-lg font-semibold text-base-strong&quot;&gt;Dein Beitrag&lt;/h3&gt;&#10;                    &lt;p className=&quot;text-sm text-base-muted&quot;&gt;Max. 2000 Zeichen. Du kannst optional Name und Telefon hinterlassen.&lt;/p&gt;&#10;                  &lt;/div&gt;&#10;                &lt;/div&gt;&#10;              }&#10;              footer={&#10;                &lt;div className=&quot;flex items-center justify-between flex-wrap gap-3 text-sm text-base-muted&quot;&gt;&#10;                  &lt;div className=&quot;inline-flex items-center gap-2&quot;&gt;&#10;                    &lt;Shield className=&quot;h-4 w-4 text-indigo-600&quot; /&gt;&#10;                    &lt;span&gt;Wir behandeln deine Angaben vertraulich.&lt;/span&gt;&#10;                  &lt;/div&gt;&#10;                  &lt;div className=&quot;inline-flex items-center gap-2&quot;&gt;&#10;                    &lt;Sparkles className=&quot;h-4 w-4 text-indigo-600&quot; /&gt;&#10;                    &lt;span&gt;Danke fürs Mitmachen! &lt;/span&gt;&#10;                  &lt;/div&gt;&#10;                &lt;/div&gt;&#10;              }&#10;            &gt;&#10;              {/* Client-Form mit Zeichenzähler &amp; Loading */}&#10;              &lt;SubmissionForm action={submitAction} /&gt;&#10;            &lt;/GlassCard&gt;&#10;          &lt;/div&gt;&#10;&#10;          {/* Hinweise / Inspiration */}&#10;          &lt;div className=&quot;lg:col-span-1&quot;&gt;&#10;            &lt;TiltCard&gt;&#10;              &lt;GlassCard&#10;                className=&quot;bg-[linear-gradient(180deg,rgba(99,102,241,0.08),rgba(99,102,241,0.02))]&quot;&#10;                header={&#10;                  &lt;div className=&quot;flex items-center gap-3&quot;&gt;&#10;                    &lt;span className=&quot;inline-flex h-9 w-9 items-center justify-center rounded-2xl bg-indigo-500/10 text-indigo-600 ring-1 ring-indigo-500/20&quot;&gt;&#10;                      &lt;Info className=&quot;h-5 w-5&quot; /&gt;&#10;                    &lt;/span&gt;&#10;                    &lt;h3 className=&quot;text-lg font-semibold text-base-strong&quot;&gt;Tipps&lt;/h3&gt;&#10;                  &lt;/div&gt;&#10;                }&#10;                hover&#10;              &gt;&#10;                &lt;ul className=&quot;space-y-3 text-sm text-base-muted&quot;&gt;&#10;                  &lt;li className=&quot;flex gap-3&quot;&gt;&#10;                    &lt;span className=&quot;mt-0.5 text-indigo-600&quot;&gt;•&lt;/span&gt;&#10;                    Schreib so, wie du es deinen Freund:innen erzählen würdest.&#10;                  &lt;/li&gt;&#10;                  &lt;li className=&quot;flex gap-3&quot;&gt;&#10;                    &lt;span className=&quot;mt-0.5 text-indigo-600&quot;&gt;•&lt;/span&gt;&#10;                    Nenne Namen nur, wenn alle damit einverstanden sind.&#10;                  &lt;/li&gt;&#10;                  &lt;li className=&quot;flex gap-3&quot;&gt;&#10;                    &lt;span className=&quot;mt-0.5 text-indigo-600&quot;&gt;•&lt;/span&gt;&#10;                    Kein Stress: Kurze Beiträge sind genauso willkommen!&#10;                  &lt;/li&gt;&#10;                &lt;/ul&gt;&#10;&#10;                &lt;MotionFade delay={0.08} className=&quot;mt-6&quot;&gt;&#10;                  &lt;div className=&quot;rounded-2xl p-4 bg-white/60 dark:bg-slate-800/60 ring-1 ring-black/5 dark:ring-white/10&quot;&gt;&#10;                    &lt;p className=&quot;text-sm text-base-strong mb-1&quot;&gt;Transparenz&lt;/p&gt;&#10;                    &lt;p className=&quot;text-sm text-base-muted&quot;&gt;&#10;                      Beiträge werden vor der Veröffentlichung kurz gesichtet –&#10;                      nur für Rechtschreibung und Inhalt.&#10;                    &lt;/p&gt;&#10;                  &lt;/div&gt;&#10;                &lt;/MotionFade&gt;&#10;              &lt;/GlassCard&gt;&#10;            &lt;/TiltCard&gt;&#10;          &lt;/div&gt;&#10;        &lt;/div&gt;&#10;      &lt;/div&gt;&#10;    &lt;/div&gt;&#10;  );&#10;}&#10;" />
              <option name="updatedContent" value="import { redirect } from 'next/navigation';&#10;import { getSession } from '@/lib/session';&#10;import { getDbPool } from '@/lib/db';&#10;import { ensureModerationSchema } from '@/lib/migrations';&#10;import FancyHeading from '@/components/ui/FancyHeading';&#10;import GlassCard from '@/components/ui/GlassCard';&#10;import GlowButton from '@/components/ui/GlowButton';&#10;import MotionFade from '@/components/ui/MotionFade';&#10;import TiltCard from '@/components/ui/TiltCard';&#10;import SubmissionForm from './SubmissionForm';&#10;import type { ResultSetHeader } from 'mysql2';&#10;import { Info, Shield, Sparkles, FileText, CheckCircle2 } from 'lucide-react';&#10;&#10;export const dynamic = 'force-dynamic';&#10;&#10;async function submitAction(formData: FormData) {&#10;  'use server';&#10;  const session = await getSession();&#10;  if (!session) redirect('/login');&#10;  const text = String(formData.get('text') || '').slice(0, 2000);&#10;  const name = String(formData.get('name') || '') || null;&#10;  const phone = String(formData.get('phone') || '') || null;&#10;  if (!text.trim()) return;&#10;&#10;  // Ensure schema exists (status columns + submission_audit)&#10;  await ensureModerationSchema();&#10;&#10;  const conn = await getDbPool().getConnection();&#10;  try {&#10;    await conn.beginTransaction();&#10;    const [res] = await conn.execute&lt;ResultSetHeader&gt;(&#10;      'INSERT INTO submissions (user_id, text, name, phone) VALUES (?, ?, ?, ?)',&#10;      [session.userId, text, name, phone]&#10;    );&#10;    const submissionId = res.insertId;&#10;    if (submissionId) {&#10;      await conn.execute(&#10;        &quot;INSERT INTO submission_audit (submission_id, action, actor_user_id) VALUES (?, 'create', ?)&quot;,&#10;        [submissionId, session.userId]&#10;      );&#10;    }&#10;    await conn.commit();&#10;  } catch (e) {&#10;    await conn.rollback();&#10;    throw e;&#10;  } finally {&#10;    conn.release();&#10;  }&#10;  redirect('/phase-1?success=1');&#10;}&#10;&#10;export default async function Phase1Page({&#10;  searchParams,&#10;}: {&#10;  searchParams?: { success?: string };&#10;}) {&#10;  const session = await getSession();&#10;  if (!session) redirect('/login');&#10;  const isSuccess = searchParams?.success === '1';&#10;&#10;  return (&#10;    &lt;div className=&quot;relative min-h-dvh bg-gradient-to-b from-indigo-50/70 to-white dark:from-slate-950 dark:to-slate-900 overflow-hidden&quot;&gt;&#10;      {/* Ambient background gradients */}&#10;      &lt;div className=&quot;pointer-events-none absolute inset-0 -z-10&quot;&gt;&#10;        &lt;div className=&quot;absolute -top-40 -left-40 h-[520px] w-[520px] rounded-full bg-gradient-to-br from-indigo-400/25 via-indigo-500/15 to-sky-400/25 blur-3xl opacity-70 dark:opacity-40&quot; /&gt;&#10;        &lt;div className=&quot;absolute top-1/3 -right-32 h-[420px] w-[420px] rounded-full bg-gradient-to-tr from-sky-400/30 via-indigo-400/20 to-fuchsia-400/25 blur-3xl opacity-75 dark:opacity-40&quot; /&gt;&#10;        &lt;div className=&quot;absolute bottom-0 left-1/2 -translate-x-1/2 h-64 w-[80%] bg-gradient-to-t from-indigo-100/70 via-transparent to-transparent dark:from-indigo-900/30&quot; /&gt;&#10;      &lt;/div&gt;&#10;&#10;      &lt;div className=&quot;max-w-5xl mx-auto px-4 py-12&quot;&gt;&#10;        &lt;FancyHeading&#10;          center&#10;          subtitle=&quot;Schick uns deinen Beitrag fürs Jahrbuch – persönlich, kreativ oder ganz sachlich. Wir kümmern uns um den Rest.&quot;&#10;        &gt;&#10;          Phase 1 – Einsenden&#10;        &lt;/FancyHeading&gt;&#10;&#10;        {isSuccess &amp;&amp; (&#10;          &lt;MotionFade&gt;&#10;            &lt;GlassCard&#10;              fade={false}&#10;              className=&quot;mb-8 bg-[linear-gradient(180deg,rgba(22,163,74,0.08),rgba(22,163,74,0.02))]&quot;&#10;              header={&#10;                &lt;div className=&quot;flex items-center gap-3 text-emerald-700 dark:text-emerald-300&quot;&gt;&#10;                  &lt;span className=&quot;inline-flex h-9 w-9 items-center justify-center rounded-2xl bg-emerald-500/10 ring-1 ring-emerald-500/20&quot;&gt;&#10;                    &lt;CheckCircle2 className=&quot;h-5 w-5&quot; /&gt;&#10;                  &lt;/span&gt;&#10;                  &lt;h3 className=&quot;text-lg font-semibold&quot;&gt;Danke für deinen Beitrag!&lt;/h3&gt;&#10;                &lt;/div&gt;&#10;              }&#10;            &gt;&#10;              &lt;p className=&quot;text-sm text-base-muted&quot;&gt;&#10;                Dein Text wurde gespeichert. Du kannst gerne noch einen weiteren Beitrag einsenden.&#10;              &lt;/p&gt;&#10;              &lt;div className=&quot;pt-4&quot;&gt;&#10;                &lt;GlowButton as=&quot;a&quot; href=&quot;/&quot; variant=&quot;secondary&quot;&gt;&#10;                  Zur Startseite&#10;                &lt;/GlowButton&gt;&#10;              &lt;/div&gt;&#10;            &lt;/GlassCard&gt;&#10;          &lt;/MotionFade&gt;&#10;        )}&#10;&#10;        &lt;div className=&quot;grid grid-cols-1 lg:grid-cols-3 gap-6 lg:gap-8&quot;&gt;&#10;          {/* Formular */}&#10;          &lt;div className=&quot;lg:col-span-2&quot;&gt;&#10;            &lt;GlassCard&#10;              header={&#10;                &lt;div className=&quot;flex items-center gap-3&quot;&gt;&#10;                  &lt;span className=&quot;inline-flex h-9 w-9 items-center justify-center rounded-2xl bg-indigo-500/10 text-indigo-600 ring-1 ring-indigo-500/20&quot;&gt;&#10;                    &lt;FileText className=&quot;h-5 w-5&quot; /&gt;&#10;                  &lt;/span&gt;&#10;                  &lt;div&gt;&#10;                    &lt;h3 className=&quot;text-lg font-semibold text-base-strong&quot;&gt;Dein Beitrag&lt;/h3&gt;&#10;                    &lt;p className=&quot;text-sm text-base-muted&quot;&gt;Max. 2000 Zeichen. Du kannst optional Name und Telefon hinterlassen.&lt;/p&gt;&#10;                  &lt;/div&gt;&#10;                &lt;/div&gt;&#10;              }&#10;              footer={&#10;                &lt;div className=&quot;flex items-center justify-between flex-wrap gap-3 text-sm text-base-muted&quot;&gt;&#10;                  &lt;div className=&quot;inline-flex items-center gap-2&quot;&gt;&#10;                    &lt;Shield className=&quot;h-4 w-4 text-indigo-600&quot; /&gt;&#10;                    &lt;span&gt;Wir behandeln deine Angaben vertraulich.&lt;/span&gt;&#10;                  &lt;/div&gt;&#10;                  &lt;div className=&quot;inline-flex items-center gap-2&quot;&gt;&#10;                    &lt;Sparkles className=&quot;h-4 w-4 text-indigo-600&quot; /&gt;&#10;                    &lt;span&gt;Danke fürs Mitmachen! &lt;/span&gt;&#10;                  &lt;/div&gt;&#10;                &lt;/div&gt;&#10;              }&#10;            &gt;&#10;              {/* Client-Form mit Zeichenzähler &amp; Loading */}&#10;              &lt;SubmissionForm action={submitAction} /&gt;&#10;            &lt;/GlassCard&gt;&#10;          &lt;/div&gt;&#10;&#10;          {/* Hinweise / Inspiration */}&#10;          &lt;div className=&quot;lg:col-span-1&quot;&gt;&#10;            &lt;TiltCard&gt;&#10;              &lt;GlassCard&#10;                className=&quot;bg-[linear-gradient(180deg,rgba(99,102,241,0.08),rgba(99,102,241,0.02))]&quot;&#10;                header={&#10;                  &lt;div className=&quot;flex items-center gap-3&quot;&gt;&#10;                    &lt;span className=&quot;inline-flex h-9 w-9 items-center justify-center rounded-2xl bg-indigo-500/10 text-indigo-600 ring-1 ring-indigo-500/20&quot;&gt;&#10;                      &lt;Info className=&quot;h-5 w-5&quot; /&gt;&#10;                    &lt;/span&gt;&#10;                    &lt;h3 className=&quot;text-lg font-semibold text-base-strong&quot;&gt;Tipps&lt;/h3&gt;&#10;                  &lt;/div&gt;&#10;                }&#10;                hover&#10;              &gt;&#10;                &lt;ul className=&quot;space-y-3 text-sm text-base-muted&quot;&gt;&#10;                  &lt;li className=&quot;flex gap-3&quot;&gt;&#10;                    &lt;span className=&quot;mt-0.5 text-indigo-600&quot;&gt;•&lt;/span&gt;&#10;                    Schreib so, wie du es deinen Freund:innen erzählen würdest.&#10;                  &lt;/li&gt;&#10;                  &lt;li className=&quot;flex gap-3&quot;&gt;&#10;                    &lt;span className=&quot;mt-0.5 text-indigo-600&quot;&gt;•&lt;/span&gt;&#10;                    Nenne Namen nur, wenn alle damit einverstanden sind.&#10;                  &lt;/li&gt;&#10;                  &lt;li className=&quot;flex gap-3&quot;&gt;&#10;                    &lt;span className=&quot;mt-0.5 text-indigo-600&quot;&gt;•&lt;/span&gt;&#10;                    Kein Stress: Kurze Beiträge sind genauso willkommen!&#10;                  &lt;/li&gt;&#10;                &lt;/ul&gt;&#10;&#10;                &lt;MotionFade delay={0.08} className=&quot;mt-6&quot;&gt;&#10;                  &lt;div className=&quot;rounded-2xl p-4 bg-white/60 dark:bg-slate-800/60 ring-1 ring-black/5 dark:ring-white/10&quot;&gt;&#10;                    &lt;p className=&quot;text-sm text-base-strong mb-1&quot;&gt;Transparenz&lt;/p&gt;&#10;                    &lt;p className=&quot;text-sm text-base-muted&quot;&gt;&#10;                      Beiträge werden vor der Veröffentlichung kurz gesichtet –&#10;                      nur für Rechtschreibung und Inhalt.&#10;                    &lt;/p&gt;&#10;                  &lt;/div&gt;&#10;                &lt;/MotionFade&gt;&#10;              &lt;/GlassCard&gt;&#10;            &lt;/TiltCard&gt;&#10;          &lt;/div&gt;&#10;        &lt;/div&gt;&#10;      &lt;/div&gt;&#10;    &lt;/div&gt;&#10;  );&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/lib/migrations.ts">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/lib/migrations.ts" />
              <option name="updatedContent" value="import { getDbPool } from './db';&#10;&#10;async function columnExists(conn: any, table: string, column: string) {&#10;  const [rows] = await conn.query(&#10;    `SELECT COUNT(*) AS c FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = DATABASE() AND TABLE_NAME = ? AND COLUMN_NAME = ?`,&#10;    [table, column]&#10;  );&#10;  return (rows[0]?.c ?? 0) &gt; 0;&#10;}&#10;&#10;async function tableExists(conn: any, table: string) {&#10;  const [rows] = await conn.query(&#10;    `SELECT COUNT(*) AS c FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = DATABASE() AND TABLE_NAME = ?`,&#10;    [table]&#10;  );&#10;  return (rows[0]?.c ?? 0) &gt; 0;&#10;}&#10;&#10;export async function ensureModerationSchema(): Promise&lt;boolean&gt; {&#10;  const conn = await getDbPool().getConnection();&#10;  try {&#10;    let ok = true;&#10;&#10;    const hasStatus = await columnExists(conn, 'submissions', 'status');&#10;    if (!hasStatus) {&#10;      try {&#10;        await conn.query(&#10;          `ALTER TABLE submissions&#10;             ADD COLUMN status ENUM('pending','approved','deleted') NOT NULL DEFAULT 'pending',&#10;             ADD COLUMN approved_by INT NULL,&#10;             ADD COLUMN approved_at TIMESTAMP NULL,&#10;             ADD COLUMN deleted_by INT NULL,&#10;             ADD COLUMN deleted_at TIMESTAMP NULL`&#10;        );&#10;      } catch (e) {&#10;        ok = false;&#10;        console.error('Failed to alter submissions table:', e);&#10;      }&#10;    }&#10;&#10;    const hasAudit = await tableExists(conn, 'submission_audit');&#10;    if (!hasAudit) {&#10;      try {&#10;        await conn.query(&#10;          `CREATE TABLE submission_audit (&#10;             id INT AUTO_INCREMENT PRIMARY KEY,&#10;             submission_id INT NOT NULL,&#10;             action ENUM('create','approve','delete','restore') NOT NULL,&#10;             actor_user_id INT NOT NULL,&#10;             created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,&#10;             FOREIGN KEY (submission_id) REFERENCES submissions(id),&#10;             FOREIGN KEY (actor_user_id) REFERENCES users(id)&#10;           )`&#10;        );&#10;      } catch (e) {&#10;        ok = false;&#10;        console.error('Failed to create submission_audit table:', e);&#10;      }&#10;    }&#10;&#10;    return ok;&#10;  } finally {&#10;    conn.release();&#10;  }&#10;}&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>