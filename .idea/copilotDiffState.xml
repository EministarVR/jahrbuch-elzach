<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/app/admin/user/LoginLinkClient.tsx">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/admin/user/LoginLinkClient.tsx" />
              <option name="originalContent" value="&quot;use client&quot;;&#10;&#10;import { useState, useTransition } from &quot;react&quot;;&#10;import GlowButton from &quot;@/components/ui/GlowButton&quot;;&#10;&#10;export default function LoginLinkClient({ userId, username }: { userId: number; username: string }) {&#10;  const [password, setPassword] = useState(&quot;&quot;);&#10;  const [result, setResult] = useState&lt;{ link: string; username: string; password: string } | null&gt;(null);&#10;  const [error, setError] = useState&lt;string | null&gt;(null);&#10;  const [isPending, startTransition] = useTransition();&#10;&#10;  const generate = () =&gt; {&#10;    setError(null);&#10;    if (!password) {&#10;      setError(&quot;Passwort eingeben&quot;);&#10;      return;&#10;    }&#10;    startTransition(async () =&gt; {&#10;      try {&#10;        const res = await fetch(&quot;/api/admin/generate-login-link&quot;, {&#10;          method: &quot;POST&quot;,&#10;          headers: { &quot;Content-Type&quot;: &quot;application/json&quot; },&#10;          body: JSON.stringify({ userId, password }),&#10;        });&#10;        const json = await res.json();&#10;        if (!json.success) {&#10;          setError(json.error || &quot;Fehler&quot;);&#10;          setResult(null);&#10;          return;&#10;        }&#10;        setResult({ link: json.link, username: json.username, password: json.password });&#10;      } catch (e) {&#10;        setError(&quot;Netzwerkfehler&quot;);&#10;      }&#10;    });&#10;  };&#10;&#10;  const qrUrl = result ? `https://api.qrserver.com/v1/create-qr-code/?size=220x220&amp;data=${encodeURIComponent(result.link)}` : null;&#10;&#10;  return (&#10;    &lt;div className=&quot;space-y-3&quot;&gt;&#10;      &lt;div className=&quot;flex flex-col sm:flex-row gap-2 sm:items-center&quot;&gt;&#10;        &lt;input&#10;          value={password}&#10;          onChange={(e) =&gt; setPassword(e.target.value)}&#10;          placeholder=&quot;Neues Passwort für Link&quot;&#10;          type=&quot;text&quot;&#10;          className=&quot;px-3 py-2 rounded-xl bg-white/70 dark:bg-slate-800/60 ring-1 ring-black/5 dark:ring-white/10 text-sm w-full sm:w-72&quot;&#10;        /&gt;&#10;        &lt;GlowButton onClick={generate} loading={isPending} className=&quot;px-4 py-2 text-sm&quot;&gt;&#10;          Login-Link erzeugen&#10;        &lt;/GlowButton&gt;&#10;      &lt;/div&gt;&#10;      {error &amp;&amp; (&#10;        &lt;div className=&quot;text-xs text-red-600 dark:text-red-400&quot;&gt;{error}&lt;/div&gt;&#10;      )}&#10;      {result &amp;&amp; (&#10;        &lt;div className=&quot;mt-2 rounded-2xl p-4 bg-white/60 dark:bg-slate-800/60 ring-1 ring-black/5 dark:ring-white/10&quot;&gt;&#10;          &lt;div className=&quot;text-sm font-medium text-base-strong mb-2&quot;&gt;Zugangsdaten&lt;/div&gt;&#10;          &lt;div className=&quot;grid sm:grid-cols-[220px,1fr] gap-4 items-start&quot;&gt;&#10;            {qrUrl &amp;&amp; (&#10;              &lt;a href={qrUrl} download={`login-${result.username}.png`} title=&quot;QR-Code herunterladen&quot;&gt;&#10;                &lt;img src={qrUrl} alt=&quot;Login QR Code&quot; className=&quot;rounded-lg ring-1 ring-black/5 dark:ring-white/10&quot; /&gt;&#10;              &lt;/a&gt;&#10;            )}&#10;            &lt;div className=&quot;space-y-2 text-sm&quot;&gt;&#10;              &lt;div&gt;&lt;span className=&quot;text-base-muted&quot;&gt;Link:&lt;/span&gt; &lt;a className=&quot;text-indigo-600 break-all&quot; href={result.link}&gt;{result.link}&lt;/a&gt;&lt;/div&gt;&#10;              &lt;div&gt;&lt;span className=&quot;text-base-muted&quot;&gt;Username:&lt;/span&gt; &lt;span className=&quot;font-medium&quot;&gt;{result.username}&lt;/span&gt;&lt;/div&gt;&#10;              &lt;div&gt;&lt;span className=&quot;text-base-muted&quot;&gt;Passwort:&lt;/span&gt; &lt;span className=&quot;font-mono&quot;&gt;{result.password}&lt;/span&gt;&lt;/div&gt;&#10;            &lt;/div&gt;&#10;          &lt;/div&gt;&#10;        &lt;/div&gt;&#10;      )}&#10;    &lt;/div&gt;&#10;  );&#10;}&#10;" />
              <option name="updatedContent" value="&quot;use client&quot;;&#10;&#10;import { useState, useTransition, useEffect } from &quot;react&quot;;&#10;import GlowButton from &quot;@/components/ui/GlowButton&quot;;&#10;import { Copy, Download, ExternalLink, QrCode, CheckCircle2, RefreshCw, Share2, Mail, MessageCircle, Printer } from &quot;lucide-react&quot;;&#10;&#10;export default function LoginLinkClient({ userId }: { userId: number; username: string }) {&#10;  const [password, setPassword] = useState(&quot;&quot;);&#10;  const [result, setResult] = useState&lt;{ link: string; username: string; password: string } | null&gt;(null);&#10;  const [error, setError] = useState&lt;string | null&gt;(null);&#10;  const [isPending, startTransition] = useTransition();&#10;  const [copied, setCopied] = useState&lt;string | null&gt;(null);&#10;  const [showShareMenu, setShowShareMenu] = useState(false);&#10;&#10;  // Auto-generiere ein starkes Passwort&#10;  const generateStrongPassword = () =&gt; {&#10;    const chars = &quot;abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789!@#$%&amp;*&quot;;&#10;    let pwd = &quot;&quot;;&#10;    for (let i = 0; i &lt; 12; i++) {&#10;      pwd += chars[Math.floor(Math.random() * chars.length)];&#10;    }&#10;    setPassword(pwd);&#10;  };&#10;&#10;  const generate = () =&gt; {&#10;    setError(null);&#10;    if (!password) {&#10;      setError(&quot;Passwort eingeben&quot;);&#10;      return;&#10;    }&#10;    startTransition(async () =&gt; {&#10;      try {&#10;        const res = await fetch(&quot;/api/admin/generate-login-link&quot;, {&#10;          method: &quot;POST&quot;,&#10;          headers: { &quot;Content-Type&quot;: &quot;application/json&quot; },&#10;          body: JSON.stringify({ userId, password }),&#10;        });&#10;        const json = await res.json();&#10;        if (!json.success) {&#10;          setError(json.error || &quot;Fehler&quot;);&#10;          setResult(null);&#10;          return;&#10;        }&#10;        setResult({ link: json.link, username: json.username, password: json.password });&#10;        setPassword(&quot;&quot;);&#10;      } catch {&#10;        setError(&quot;Netzwerkfehler&quot;);&#10;      }&#10;    });&#10;  };&#10;&#10;  const copyToClipboard = async (text: string, label: string) =&gt; {&#10;    try {&#10;      await navigator.clipboard.writeText(text);&#10;      setCopied(label);&#10;      setTimeout(() =&gt; setCopied(null), 2000);&#10;    } catch {&#10;      alert(&quot;Kopieren fehlgeschlagen&quot;);&#10;    }&#10;  };&#10;&#10;  const copyAll = async () =&gt; {&#10;    if (!result) return;&#10;    const text = `Login-Daten für ${result.username}\n\nLogin-Link: ${result.link}\n\nUsername: ${result.username}\nPasswort: ${result.password}\n\nEinfach den Link öffnen oder QR-Code scannen!`;&#10;    await copyToClipboard(text, 'all');&#10;  };&#10;&#10;  const downloadQR = () =&gt; {&#10;    if (!result) return;&#10;    const qrUrl = `https://api.qrserver.com/v1/create-qr-code/?size=800x800&amp;data=${encodeURIComponent(result.link)}`;&#10;    const link = document.createElement('a');&#10;    link.href = qrUrl;&#10;    link.download = `login-qr-${result.username}.png`;&#10;    link.click();&#10;  };&#10;&#10;  const openInNewTab = () =&gt; {&#10;    if (!result) return;&#10;    window.open(result.link, '_blank');&#10;  };&#10;&#10;  const shareViaEmail = () =&gt; {&#10;    if (!result) return;&#10;    const subject = encodeURIComponent(`Login-Zugang für ${result.username}`);&#10;    const body = encodeURIComponent(`Hallo,\n\nhier sind deine Login-Daten:\n\nLogin-Link: ${result.link}\n\nUsername: ${result.username}\nPasswort: ${result.password}\n\nEinfach den Link öffnen oder QR-Code scannen!\n\nViel Erfolg!`);&#10;    window.location.href = `mailto:?subject=${subject}&amp;body=${body}`;&#10;  };&#10;&#10;  const shareViaWhatsApp = () =&gt; {&#10;    if (!result) return;&#10;    const text = encodeURIComponent(`Hier sind deine Login-Daten:\n\n ${result.link}\n\n Username: ${result.username}\n Passwort: ${result.password}\n\nEinfach Link öffnen! `);&#10;    window.open(`https://wa.me/?text=${text}`, '_blank');&#10;  };&#10;&#10;  const print = () =&gt; {&#10;    if (!result) return;&#10;    const printWindow = window.open('', '_blank');&#10;    if (!printWindow) return;&#10;    &#10;    const qrUrl = `https://api.qrserver.com/v1/create-qr-code/?size=600x600&amp;data=${encodeURIComponent(result.link)}`;&#10;    &#10;    printWindow.document.write(`&#10;      &lt;!DOCTYPE html&gt;&#10;      &lt;html&gt;&#10;        &lt;head&gt;&#10;          &lt;title&gt;Login-Daten - ${result.username}&lt;/title&gt;&#10;          &lt;style&gt;&#10;            body { &#10;              font-family: system-ui, -apple-system, sans-serif; &#10;              max-width: 600px; &#10;              margin: 40px auto; &#10;              padding: 20px;&#10;              line-height: 1.6;&#10;            }&#10;            h1 { color: #d97757; margin-bottom: 30px; }&#10;            .box { &#10;              border: 2px solid #d97757; &#10;              border-radius: 12px; &#10;              padding: 20px; &#10;              margin: 20px 0;&#10;              background: #faf8f5;&#10;            }&#10;            .label { &#10;              font-weight: bold; &#10;              color: #6b635a; &#10;              font-size: 12px;&#10;              text-transform: uppercase;&#10;              margin-bottom: 8px;&#10;            }&#10;            .value { &#10;              font-size: 16px; &#10;              color: #2a2520;&#10;              padding: 12px;&#10;              background: white;&#10;              border-radius: 8px;&#10;              margin-bottom: 16px;&#10;              word-break: break-all;&#10;            }&#10;            .qr { &#10;              text-align: center; &#10;              margin: 30px 0;&#10;            }&#10;            .qr img { &#10;              max-width: 300px; &#10;              border: 2px solid #d97757;&#10;              border-radius: 12px;&#10;              padding: 20px;&#10;              background: white;&#10;            }&#10;            .footer { &#10;              margin-top: 40px; &#10;              padding-top: 20px; &#10;              border-top: 2px solid #e5e5e5;&#10;              color: #6b635a; &#10;              font-size: 14px;&#10;            }&#10;            @media print {&#10;              body { margin: 0; }&#10;            }&#10;          &lt;/style&gt;&#10;        &lt;/head&gt;&#10;        &lt;body&gt;&#10;          &lt;h1&gt; Jahrbuch Login-Daten&lt;/h1&gt;&#10;          &#10;          &lt;div class=&quot;qr&quot;&gt;&#10;            &lt;img src=&quot;${qrUrl}&quot; alt=&quot;QR Code&quot; /&gt;&#10;            &lt;p style=&quot;margin-top: 12px; color: #6b635a;&quot;&gt;QR-Code scannen für direkten Login&lt;/p&gt;&#10;          &lt;/div&gt;&#10;          &#10;          &lt;div class=&quot;box&quot;&gt;&#10;            &lt;div class=&quot;label&quot;&gt;Login-Link&lt;/div&gt;&#10;            &lt;div class=&quot;value&quot;&gt;${result.link}&lt;/div&gt;&#10;            &#10;            &lt;div class=&quot;label&quot;&gt;Username&lt;/div&gt;&#10;            &lt;div class=&quot;value&quot;&gt;${result.username}&lt;/div&gt;&#10;            &#10;            &lt;div class=&quot;label&quot;&gt;Passwort&lt;/div&gt;&#10;            &lt;div class=&quot;value&quot;&gt;${result.password}&lt;/div&gt;&#10;          &lt;/div&gt;&#10;          &#10;          &lt;div class=&quot;footer&quot;&gt;&#10;            &lt;strong&gt; So funktioniert's:&lt;/strong&gt;&#10;            &lt;ul&gt;&#10;              &lt;li&gt;Scanne den QR-Code mit deinem Smartphone&lt;/li&gt;&#10;              &lt;li&gt;Oder öffne den Login-Link im Browser&lt;/li&gt;&#10;              &lt;li&gt;Die Zugangsdaten werden automatisch ausgefüllt&lt;/li&gt;&#10;            &lt;/ul&gt;&#10;          &lt;/div&gt;&#10;          &#10;          &lt;script&gt;&#10;            window.onload = () =&gt; {&#10;              setTimeout(() =&gt; window.print(), 500);&#10;            };&#10;          &lt;/script&gt;&#10;        &lt;/body&gt;&#10;      &lt;/html&gt;&#10;    `);&#10;    printWindow.document.close();&#10;  };&#10;&#10;  const qrUrl = result ? `https://api.qrserver.com/v1/create-qr-code/?size=280x280&amp;data=${encodeURIComponent(result.link)}` : null;&#10;&#10;  return (&#10;    &lt;div className=&quot;space-y-4&quot;&gt;&#10;      &lt;div className=&quot;flex flex-col sm:flex-row gap-3&quot;&gt;&#10;        &lt;div className=&quot;flex-1 flex gap-2&quot;&gt;&#10;          &lt;input&#10;            value={password}&#10;            onChange={(e) =&gt; setPassword(e.target.value)}&#10;            onKeyDown={(e) =&gt; e.key === 'Enter' &amp;&amp; generate()}&#10;            placeholder=&quot;Passwort für Link&quot;&#10;            type=&quot;text&quot;&#10;            className=&quot;input-base flex-1 text-sm&quot;&#10;          /&gt;&#10;          &lt;GlowButton&#10;            onClick={generateStrongPassword}&#10;            variant=&quot;ghost&quot;&#10;            className=&quot;px-3 py-2 text-xs shrink-0&quot;&#10;            title=&quot;Zufälliges Passwort generieren&quot;&#10;          &gt;&#10;            &#10;          &lt;/GlowButton&gt;&#10;        &lt;/div&gt;&#10;        &lt;GlowButton &#10;          onClick={generate} &#10;          loading={isPending} &#10;          variant=&quot;primary&quot;&#10;          className=&quot;px-5 py-2.5 text-sm whitespace-nowrap&quot;&#10;          iconLeft={&lt;QrCode className=&quot;h-4 w-4&quot; /&gt;}&#10;        &gt;&#10;          Link erzeugen&#10;        &lt;/GlowButton&gt;&#10;      &lt;/div&gt;&#10;&#10;      {error &amp;&amp; (&#10;        &lt;div className=&quot;rounded-xl bg-[#c96846]/10 dark:bg-[#d97757]/10 border border-[#c96846]/30 dark:border-[#d97757]/30 px-4 py-3&quot;&gt;&#10;          &lt;div className=&quot;text-sm text-[#c96846] dark:text-[#d97757] font-medium&quot;&gt;{error}&lt;/div&gt;&#10;        &lt;/div&gt;&#10;      )}&#10;&#10;      {result &amp;&amp; (&#10;        &lt;div className=&quot;rounded-2xl bg-gradient-to-br from-white/80 to-white/60 dark:from-[#2a2520]/80 dark:to-[#2a2520]/60 backdrop-blur-sm border border-[#d97757]/20 dark:border-[#e89a7a]/20 p-6 space-y-5 shadow-lg shadow-[#d97757]/10&quot;&gt;&#10;          &lt;div className=&quot;flex items-center justify-between flex-wrap gap-3&quot;&gt;&#10;            &lt;div className=&quot;flex items-center gap-2&quot;&gt;&#10;              &lt;div className=&quot;h-10 w-10 rounded-xl bg-gradient-to-br from-[#7a9b88] to-[#6a8b78] flex items-center justify-center text-white shadow-md&quot;&gt;&#10;                &lt;CheckCircle2 className=&quot;h-5 w-5&quot; /&gt;&#10;              &lt;/div&gt;&#10;              &lt;div&gt;&#10;                &lt;div className=&quot;text-sm font-semibold text-[#2a2520] dark:text-[#f5f1ed]&quot;&gt;Login-Link erstellt&lt;/div&gt;&#10;                &lt;div className=&quot;text-xs text-[#6b635a] dark:text-[#b8aea5]&quot;&gt;Für {result.username}&lt;/div&gt;&#10;              &lt;/div&gt;&#10;            &lt;/div&gt;&#10;            &lt;div className=&quot;flex gap-2&quot;&gt;&#10;              &lt;div className=&quot;relative&quot;&gt;&#10;                &lt;GlowButton&#10;                  onClick={() =&gt; setShowShareMenu(!showShareMenu)}&#10;                  variant=&quot;secondary&quot;&#10;                  className=&quot;px-3 py-2 text-xs&quot;&#10;                  iconLeft={&lt;Share2 className=&quot;h-3.5 w-3.5&quot; /&gt;}&#10;                &gt;&#10;                  Teilen&#10;                &lt;/GlowButton&gt;&#10;                {showShareMenu &amp;&amp; (&#10;                  &lt;div className=&quot;absolute right-0 top-full mt-2 w-48 rounded-xl bg-white dark:bg-[#2a2520] border border-[#d97757]/20 dark:border-[#e89a7a]/20 shadow-xl z-50 overflow-hidden&quot;&gt;&#10;                    &lt;button&#10;                      onClick={() =&gt; { shareViaEmail(); setShowShareMenu(false); }}&#10;                      className=&quot;w-full px-4 py-3 text-left text-sm hover:bg-[#d97757]/10 dark:hover:bg-[#e89a7a]/10 flex items-center gap-3 text-[#2a2520] dark:text-[#f5f1ed] transition-colors&quot;&#10;                    &gt;&#10;                      &lt;Mail className=&quot;h-4 w-4 text-[#7a9b88]&quot; /&gt;&#10;                      Per E-Mail&#10;                    &lt;/button&gt;&#10;                    &lt;button&#10;                      onClick={() =&gt; { shareViaWhatsApp(); setShowShareMenu(false); }}&#10;                      className=&quot;w-full px-4 py-3 text-left text-sm hover:bg-[#d97757]/10 dark:hover:bg-[#e89a7a]/10 flex items-center gap-3 text-[#2a2520] dark:text-[#f5f1ed] transition-colors&quot;&#10;                    &gt;&#10;                      &lt;MessageCircle className=&quot;h-4 w-4 text-[#7a9b88]&quot; /&gt;&#10;                      Per WhatsApp&#10;                    &lt;/button&gt;&#10;                    &lt;button&#10;                      onClick={() =&gt; { copyAll(); setShowShareMenu(false); }}&#10;                      className=&quot;w-full px-4 py-3 text-left text-sm hover:bg-[#d97757]/10 dark:hover:bg-[#e89a7a]/10 flex items-center gap-3 text-[#2a2520] dark:text-[#f5f1ed] transition-colors&quot;&#10;                    &gt;&#10;                      &lt;Copy className=&quot;h-4 w-4 text-[#7a9b88]&quot; /&gt;&#10;                      Alles kopieren&#10;                    &lt;/button&gt;&#10;                    &lt;button&#10;                      onClick={() =&gt; { print(); setShowShareMenu(false); }}&#10;                      className=&quot;w-full px-4 py-3 text-left text-sm hover:bg-[#d97757]/10 dark:hover:bg-[#e89a7a]/10 flex items-center gap-3 text-[#2a2520] dark:text-[#f5f1ed] transition-colors&quot;&#10;                    &gt;&#10;                      &lt;Printer className=&quot;h-4 w-4 text-[#7a9b88]&quot; /&gt;&#10;                      Drucken&#10;                    &lt;/button&gt;&#10;                  &lt;/div&gt;&#10;                )}&#10;              &lt;/div&gt;&#10;              &lt;GlowButton&#10;                onClick={() =&gt; setResult(null)}&#10;                variant=&quot;ghost&quot;&#10;                className=&quot;px-3 py-2 text-xs&quot;&#10;                iconLeft={&lt;RefreshCw className=&quot;h-3.5 w-3.5&quot; /&gt;}&#10;              &gt;&#10;                Neu&#10;              &lt;/GlowButton&gt;&#10;            &lt;/div&gt;&#10;          &lt;/div&gt;&#10;&#10;          &lt;div className=&quot;grid md:grid-cols-[auto,1fr] gap-6 items-start&quot;&gt;&#10;            {qrUrl &amp;&amp; (&#10;              &lt;div className=&quot;flex flex-col items-center gap-3&quot;&gt;&#10;                &lt;div className=&quot;rounded-2xl bg-white p-4 shadow-lg ring-1 ring-[#d97757]/20 dark:ring-[#e89a7a]/20&quot;&gt;&#10;                  {/* eslint-disable-next-line @next/next/no-img-element */}&#10;                  &lt;img &#10;                    src={qrUrl} &#10;                    alt=&quot;Login QR Code&quot; &#10;                    className=&quot;w-[280px] h-[280px] rounded-xl&quot;&#10;                  /&gt;&#10;                &lt;/div&gt;&#10;                &lt;GlowButton&#10;                  onClick={downloadQR}&#10;                  variant=&quot;secondary&quot;&#10;                  className=&quot;px-4 py-2 text-xs w-full&quot;&#10;                  iconLeft={&lt;Download className=&quot;h-3.5 w-3.5&quot; /&gt;}&#10;                &gt;&#10;                  QR-Code laden&#10;                &lt;/GlowButton&gt;&#10;              &lt;/div&gt;&#10;            )}&#10;&#10;            &lt;div className=&quot;space-y-4&quot;&gt;&#10;              &lt;div className=&quot;space-y-2&quot;&gt;&#10;                &lt;div className=&quot;text-xs font-medium text-[#6b635a] dark:text-[#b8aea5] uppercase tracking-wide&quot;&gt;Login-Link&lt;/div&gt;&#10;                &lt;div className=&quot;flex items-center gap-2&quot;&gt;&#10;                  &lt;div className=&quot;flex-1 rounded-xl bg-[#7a9b88]/5 dark:bg-[#8faf9d]/5 border border-[#7a9b88]/20 dark:border-[#8faf9d]/20 px-4 py-3&quot;&gt;&#10;                    &lt;a &#10;                      href={result.link} &#10;                      target=&quot;_blank&quot;&#10;                      rel=&quot;noopener noreferrer&quot;&#10;                      className=&quot;text-sm text-[#7a9b88] dark:text-[#8faf9d] hover:text-[#6a8b78] dark:hover:text-[#7a9b88] break-all font-medium hover:underline&quot;&#10;                    &gt;&#10;                      {result.link}&#10;                    &lt;/a&gt;&#10;                  &lt;/div&gt;&#10;                &lt;/div&gt;&#10;                &lt;div className=&quot;flex gap-2&quot;&gt;&#10;                  &lt;GlowButton&#10;                    onClick={() =&gt; copyToClipboard(result.link, 'link')}&#10;                    variant={copied === 'link' ? 'primary' : 'secondary'}&#10;                    className=&quot;px-3 py-2 text-xs flex-1&quot;&#10;                    iconLeft={copied === 'link' ? &lt;CheckCircle2 className=&quot;h-3.5 w-3.5&quot; /&gt; : &lt;Copy className=&quot;h-3.5 w-3.5&quot; /&gt;}&#10;                  &gt;&#10;                    {copied === 'link' ? 'Kopiert!' : 'Link kopieren'}&#10;                  &lt;/GlowButton&gt;&#10;                  &lt;GlowButton&#10;                    onClick={openInNewTab}&#10;                    variant=&quot;ghost&quot;&#10;                    className=&quot;px-3 py-2 text-xs&quot;&#10;                    iconLeft={&lt;ExternalLink className=&quot;h-3.5 w-3.5&quot; /&gt;}&#10;                  &gt;&#10;                    Öffnen&#10;                  &lt;/GlowButton&gt;&#10;                &lt;/div&gt;&#10;              &lt;/div&gt;&#10;&#10;              &lt;div className=&quot;grid grid-cols-2 gap-3&quot;&gt;&#10;                &lt;div className=&quot;space-y-1.5&quot;&gt;&#10;                  &lt;div className=&quot;text-xs font-medium text-[#6b635a] dark:text-[#b8aea5] uppercase tracking-wide&quot;&gt;Username&lt;/div&gt;&#10;                  &lt;div className=&quot;rounded-xl bg-white/60 dark:bg-[#1a1714]/60 border border-[#d97757]/15 dark:border-[#e89a7a]/15 px-3 py-2.5&quot;&gt;&#10;                    &lt;div className=&quot;text-sm font-semibold text-[#2a2520] dark:text-[#f5f1ed]&quot;&gt;{result.username}&lt;/div&gt;&#10;                  &lt;/div&gt;&#10;                  &lt;GlowButton&#10;                    onClick={() =&gt; copyToClipboard(result.username, 'username')}&#10;                    variant=&quot;ghost&quot;&#10;                    className=&quot;px-2 py-1.5 text-xs w-full&quot;&#10;                    iconLeft={copied === 'username' ? &lt;CheckCircle2 className=&quot;h-3 w-3&quot; /&gt; : &lt;Copy className=&quot;h-3 w-3&quot; /&gt;}&#10;                  &gt;&#10;                    {copied === 'username' ? 'Kopiert!' : 'Kopieren'}&#10;                  &lt;/GlowButton&gt;&#10;                &lt;/div&gt;&#10;&#10;                &lt;div className=&quot;space-y-1.5&quot;&gt;&#10;                  &lt;div className=&quot;text-xs font-medium text-[#6b635a] dark:text-[#b8aea5] uppercase tracking-wide&quot;&gt;Passwort&lt;/div&gt;&#10;                  &lt;div className=&quot;rounded-xl bg-white/60 dark:bg-[#1a1714]/60 border border-[#d97757]/15 dark:border-[#e89a7a]/15 px-3 py-2.5&quot;&gt;&#10;                    &lt;div className=&quot;text-sm font-mono font-semibold text-[#2a2520] dark:text-[#f5f1ed]&quot;&gt;{result.password}&lt;/div&gt;&#10;                  &lt;/div&gt;&#10;                  &lt;GlowButton&#10;                    onClick={() =&gt; copyToClipboard(result.password, 'password')}&#10;                    variant=&quot;ghost&quot;&#10;                    className=&quot;px-2 py-1.5 text-xs w-full&quot;&#10;                    iconLeft={copied === 'password' ? &lt;CheckCircle2 className=&quot;h-3 w-3&quot; /&gt; : &lt;Copy className=&quot;h-3 w-3&quot; /&gt;}&#10;                  &gt;&#10;                    {copied === 'password' ? 'Kopiert!' : 'Kopieren'}&#10;                  &lt;/GlowButton&gt;&#10;                &lt;/div&gt;&#10;              &lt;/div&gt;&#10;&#10;              &lt;div className=&quot;rounded-xl bg-[#d97757]/5 dark:bg-[#e89a7a]/5 border border-[#d97757]/20 dark:border-[#e89a7a]/20 px-4 py-3&quot;&gt;&#10;                &lt;div className=&quot;text-xs text-[#6b635a] dark:text-[#b8aea5] space-y-1&quot;&gt;&#10;                  &lt;div className=&quot;font-medium text-[#2a2520] dark:text-[#f5f1ed]&quot;&gt; Hinweise:&lt;/div&gt;&#10;                  &lt;div&gt;• QR-Code scannen für sofortigen Login&lt;/div&gt;&#10;                  &lt;div&gt;• Link funktioniert auf allen Geräten&lt;/div&gt;&#10;                  &lt;div&gt;• Login-Daten können mehrfach genutzt werden&lt;/div&gt;&#10;                  &lt;div&gt;• Über &quot;Teilen&quot; Button versenden oder drucken&lt;/div&gt;&#10;                &lt;/div&gt;&#10;              &lt;/div&gt;&#10;            &lt;/div&gt;&#10;          &lt;/div&gt;&#10;        &lt;/div&gt;&#10;      )}&#10;      &#10;      {/* Click außerhalb schließt Share-Menü */}&#10;      {showShareMenu &amp;&amp; (&#10;        &lt;div &#10;          className=&quot;fixed inset-0 z-40&quot; &#10;          onClick={() =&gt; setShowShareMenu(false)}&#10;        /&gt;&#10;      )}&#10;    &lt;/div&gt;&#10;  );&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>